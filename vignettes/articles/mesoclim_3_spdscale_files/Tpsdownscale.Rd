% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/climatefunctions.R
\name{Tpsdownscale}
\alias{Tpsdownscale}
\title{Performs thin-plate spline downscaling}
\usage{
Tpsdownscale(r, dtmc, dtmf, method = "normal", fast = TRUE)
}
\arguments{
\item{r}{a single layer SpatRast dataset to be downscaled.}

\item{dtmc}{a coarse resolution SpatRast of elevations matching the resolution, coordinate reference
system and extent of \code{r}.}

\item{dtmf}{a fine-resolution SpatRast of elevations.}

\item{method}{one of \code{normal}, \code{log} or \code{logit} (see details)}

\item{fast}{optional logical indicating whether to use \code{\link[fields:Tps]{fields::fastTps()}} (faster but
less accurate)}
}
\value{
a SpatRast of \code{r} downscaled to match \code{dtmf}.
}
\description{
The function \code{Tpsdownscale} is a thin plate spline model, typically
with elevation as a covariate to downscale data.
}
\details{
if \code{method = "log"} data are log-transformed prior to performing the downscale,
and then back-transformed. Use this method if input and output data must always be non-negative.
if \code{method = "logit"} data are logit-transformed prior to performing the downscale,
and then back-transformed. Use this method if input and output data must always be
bounded by 0 and 1. In both instances, the spacial case where input data are 0 or 1 is handled.
If \code{method = "normal"} no transformation is applied.
}
\examples{
climdata<-read_climdata(system.file('extdata/preprepdata/ukcp18rcm.Rds',package='mesoclim'))
dtmf<-terra::rast(system.file('extdata/dtms/dtmf.tif',package='mesoclim'))
rain<-terra::rast(climdata$prec,crs=terra::crs(climdata$dtm),extent=terra::ext(climdata$dtm))[[1]]
try(rainf<-Tpsdownscale(rain, climdata$dtm, dtmf, method = "normal", fast = TRUE))
terra::plot(rain,main='Input rain')
terra::plot(rainf,main='Downscaled rain')
}
\keyword{spatial}
