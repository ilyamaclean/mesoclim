% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/temporaldownscale.R
\name{hum_dailytohourly}
\alias{hum_dailytohourly}
\title{Daily to hourly relative humidity}
\usage{
hum_dailytohourly(
  relhum,
  tasmin,
  tasmax,
  temph,
  psl,
  presh,
  tme = NA,
  relmin = 2,
  adjust = TRUE
)
}
\arguments{
\item{relhum}{\itemize{
\item an array of daily relative humidity values (\%)
}}

\item{tasmin}{\itemize{
\item an array of daily minimum temperature values (deg C)
}}

\item{tasmax}{\itemize{
\item an array of daily maximum temperature values (deg C)
}}

\item{temph}{\itemize{
\item an array of hourly temperature values (deg C)
}}

\item{psl}{\itemize{
\item an array of daily sea-level pressure values(kPa)
}}

\item{presh}{\itemize{
\item an aray of hourly surface-level pressure values (kPa)
}}

\item{tme}{\itemize{
\item POSIXlt object of dates corresponding to radsw
}}

\item{relmin}{\itemize{
\item minimum possible relative humidity value
}}

\item{adjust}{\itemize{
\item optional logical which if TRUE ensures that, after interpolation, returned
hourly values, when averaged to daily, match the input
}}
}
\value{
an array of hourly relative humidity values (\%)
}
\description{
Daily to hourly relative humidity
}
\details{
#' Owing to the strong dependence of relative humidity on temperature, the
resulting diurnal patterns, prior to interpolation, relative humidity is first
converted to specific humidity using tasmin, tasmax and psl. After interpolation,
the data are back-converted to relative humidity, using temph and presh.
~~ Function should spline interpolate vapour pressure and use temperature cycle
Derives an array of hourly relative humidity values from daily values.
}
\examples{
# ========================================================================= #
# ~~~~~~~~~~~~~~~~~~~~ input provided as vector =========================== #
# ========================================================================= #
# Derive daily tmx and tmn from hourly era5 data
rh<-c(80,80,70,90,80)
tmx <- c(15,15,18,20,12)
tmn <- c(10,9,12,12,6)
tme <- as.POSIXlt(c(0:4) * 3600 * 24, origin = "2018-05-01", tz = "UTC")
pres<-c(96,97,98,99,100)
hr_temp <- temp_dailytohourly(tmn, tmx, tme, 50, -5)
hr_pres<-pres_dailytohourly(pres,tme)
# Use interpolation function
hrrh <- hum_dailytohourly(rh, tmn, tmx,hr_temp,pres,hr_pres,relmin = 10)
hr_tme<-as.POSIXlt(unlist(lapply(tme,FUN=function(x) x+(60*60*c(0:23)) )))
# Plot results to compare
matplot(x=as.numeric(hr_tme),y=hrrh, type = "l", lty = 1)
# ========================================================================= #
# ~~~~~~~~~~~~~~~~~~~~ input provided as SpatRaster ======================= #
# ========================================================================= #
climdaily<- read_climdata(mesoclim::ukcpinput)
hr_temp<-temp_dailytohourly(climdaily$tmin, climdaily$tmax, srte = 0.09)
hr_pres<-pres_dailytohourly(climdaily$pres)
hrrh <- hum_dailytohourly(climdaily$relhum, climdaily$tmin, climdaily$tmax,hr_temp,climdaily$pres, hr_pres,relmin = 10)
# Plot results for one cell
cell_rh<-t(terra::extract(hrrh,matrix(c(175000,40000),ncol=2)))
matplot(x=as.numeric(terra::time(hrrh)),y=cell_rh[,1], type = "l", lty = 1)
}
\keyword{temporal}
