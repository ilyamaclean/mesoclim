% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialdownscale.R
\name{winddownscale}
\alias{winddownscale}
\title{Downscale wind speed accounting for elevation and terrain sheltering effects}
\usage{
winddownscale(wspeed, wdir, dtmf, dtmm, dtmc, uz = 2)
}
\arguments{
\item{wspeed}{a coarse-resolution array of wind speeds (m/s)}

\item{wdir}{a coarse-resolution array of wind directions (decimal degrees from north, from)}

\item{dtmf}{a high-resolution SpatRast of elevations}

\item{dtmm}{a medium-resolution SpatRast of elevations covering a larger area
than dtmf (see details)}

\item{dtmc}{a coarse-resolution SpatRast of elevations matching
the resolution, extent and coordinate reference system of \code{wspeed}.}

\item{uz}{height above ground (m) of wind speed measurement in \code{wspeed}.}
}
\value{
a stacked SpatRast of wind speeds matching the resolution,
coordinate reference system and extent of \code{dtmf}.
}
\description{
The function \code{winddownscale} is used to spatially downscale windspeed,
performing adjustments for elevation and terrain sheltering
a specified wind direction.
}
\details{
Elevation effects are derived by sampling the dtms at intervals in
an upwind direction, determining the elevation difference form each focal cell and
performing a standard wind-height adjustment. Terrain sheltering is computed
from horizon angles following the method detailed in Maclean et al (2019) Methods
Ecol Evol 10: 280-290. By supplying three dtms, the algorithm is able to account for
elevation differences outside the boundaries of \code{dtmf}. The area covered by \code{dtmm} was
extend at least one \code{dtmc} grid cell beyond \code{dtmf}. Elevations must be in metres.
The coordinate reference system of \code{dtmf} must be such that x and y are also in metres.
\code{dtmm} and \code{dtmc} are reprojected to match the coordinate reference system of \code{dtmf}.
To enhance computational efficiency, Wind direction is assumed constant over the extent of
\code{dtmf}.
}
\examples{
wspeed <- era5data$climarray$windspeed
wdir <- era5data$climarray$winddir
# Takes a few seconds to run
wsfine <- winddownscale(wspeed, wdir, rast(dtmf), rast(dtmm), rast(era5data$dtmc))
plot(wsfine[[1]])
}
\seealso{
\code{\link[=windelev]{windelev()}}
}
