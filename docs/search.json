[{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_1_download.html","id":"downloading-of-coarse-resolution-global-climate-data-","dir":"Articles","previous_headings":"","what":"1 Downloading of coarse resolution global climate data.","title":"1 Downloading Inputs","text":"number source-specific functions provided downscaling processing coarse-resolution climate data.Data sources include ERA5 Reanalysis data produced Copernicus Climate Change Service (ref), NCEP-NCAR NCEPâ€“DOE Atmospheric Model Intercomparison Project (Kanamitso et al 2002), UKCP18 global regional future climate estimates. {Others??}.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_1_download.html","id":"example-downloading-ukcp18-rcm-data-for-the-uk","dir":"Articles","previous_headings":"1 Downloading of coarse resolution global climate data.","what":"Example: downloading UKCP18 RCM data for the UK","title":"1 Downloading Inputs","text":"UKCP18 data available different resolutions various climate models run produce outputs global, European UK domains. outputs various comoinations driving global climate models regional local Data download requires ceda username password. function download netcdf file(s) containing decade data correspond model, collection, domain time period requested. UKCP18 files contain single variable therefore multiple files downloaded details see: {MetOff reference}","code":"dir_ukcp18<-tempdir()  collection<-'land-rcm' domain<-'uk' member<-'01' rcp<-'rcp85' startdate<-as.POSIXlt('2018/01/01') enddate<-as.POSIXlt('2018/12/31')  download_ukcp18(     dir_ukcp18,     cedausr,cedapwd,     startdate,enddate,     collection, domain, rcp, member,     vars=c('clt','hurs','pr','prsn','psl','rls','rss','tasmax','tasmin','uas','vas') )  list.files(dir_ukcp18)"},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_1_download.html","id":"digital-terrain-models","dir":"Articles","previous_headings":"1 Downloading of coarse resolution global climate data. > Ancillary data requirements and sourcing","what":"Digital terrain models","title":"1 Downloading Inputs","text":"Additional data required downscaling include digital terrain models (DTMs) coarse resolution climate input data fine resolution downscaling. possible, coarse resolution DTM correspond data informed climate modelling. example, made available UKCP18 RCM data can derived ERA5 using geopotential variable. {option UKCP18 ERA5 download functions allows downloading DTMs?} original DTM corresponding input climate data unavailable , can derived various webservices resampled correct projection resolution. DTMs used downscaling also act land/sea mask, therefore sea cells possess NA value. : * ADD download UKCP18 rcm dem option function ERA5 using geopotential!!!","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_1_download.html","id":"sea-surface-temperature","dir":"Articles","previous_headings":"1 Downloading of coarse resolution global climate data. > Ancillary data requirements and sourcing","what":"Sea Surface Temperature","title":"1 Downloading Inputs","text":"Sea surface temperatures required corresponding time period geography downscaling area. Functions provided download historic sea surface temperature ERA5 NCEP(?) data future data estimated using UKCP18 regional models UK NW Atlantic (add reference). __ Something sourcing future sst data??__ Additional data may also used inform preprocessing downscaling particular climate inputs. example, UKCP18 data commonly provides net rather downward short longwave radiation. converting downward radiation required downscaling, albedo values can either provided (historic data sources) constant proxy values can used.","code":"# Download UKCP18 sea surface temp data  # ADD FUNCTION"},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_2_preparedata.html","id":"defining-area-of-interest","dir":"Articles","previous_headings":"2 Preprocessing coarse resolution climate data","what":"Defining area of interest","title":"2. Data pre-processing","text":"Unless wanting analyse whole area covered downloaded climate data, best define broad area interest restrict data size processing times. area interest used crop coarse DTM projection resolution climate data provide template data processing.","code":"# Define dir holding already downloaded climate and ancillary data dir_data<-system.file('extdata/ukcp18rcm',package='mesoclim')  # Load UKCP18rcm DTM of UK dtm<-terra::rast(file.path(dir_data,'orog_land-rcm_uk_12km_osgb.nc'))  # Crop to an area of interest aoi<-terra::vect(terra::ext(-7.125,-2.875,49.375,51.625),crs='EPSG:4326') aoi_e<-terra::project(aoi,terra::crs(dtm)) dtm<-terra::crop(dtm,aoi_e)  plot(dtm,main='DTM of climate data extent to be extracted')"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_2_preparedata.html","id":"creation-of-standard-inputs-for-downscaling","dir":"Articles","previous_headings":"2 Preprocessing coarse resolution climate data","what":"Creation of standard inputs for downscaling","title":"2. Data pre-processing","text":"Different sources climate ancillary data can provide different variables using different SI units, different formats using different file naming conventions. Therefore, mesoclim provides several functions convert check source data standard inputs subsequent downscaling. look UKCP18 regional data example.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_2_preparedata.html","id":"ukcp18-climate-preprocessing","dir":"Articles","previous_headings":"2 Preprocessing coarse resolution climate data > Creation of standard inputs for downscaling","what":"UKCP18 climate preprocessing","title":"2. Data pre-processing","text":"UKCP18 data preprocessing requires conversion net downward short longwave radiation. conversion shortwave radiation calculated using estimate albedo resolution climate data. Albedo data can either provided , constant land/sea albedo values used. Outputs list climate variables can written file using function write_climdata().","code":"# Preprocess UKCP18 data using constant albedo land / sea values collection<-'land-rcm' domain<-'uk' member<-'01' rcp<-'rcp85' startdate<-as.POSIXlt('2018/01/01') enddate<-as.POSIXlt('2018/12/31')  # Processes using already downloaded ukcp18rcm files in dir_data t0<-now() ukcp18rcm<-ukcp18toclimarray(dir_data, dtm,  startdate, enddate,                              collection, domain, member) #> Loading clt_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading hurs_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading huss_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading pr_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading psl_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading rls_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading rss_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading tasmax_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading tasmin_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading uas_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Loading vas_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc #> Using constant land and sea albedo values - assuming NA values in dtmc are sea!! print(now()-t0)  # Write preprocessed data # dir_out<- system.file('extdata/preprepdata',package='mesoclim') dir_out<-tempdir() write_climdata(ukcp18rcm,file.path(dir_out,'ukcp18rcm.Rds'))"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_2_preparedata.html","id":"ukcp18-sea-surface-temperature-preprocessing","dir":"Articles","previous_headings":"2 Preprocessing coarse resolution climate data > Creation of standard inputs for downscaling","what":"UKCP18 sea surface temperature preprocessing","title":"2. Data pre-processing","text":"","code":"dir_sst<-system.file('extdata/ukcp18sst',package='mesoclim') ukcp18sst<-create_ukcpsst_data(dir_sst,startdate,enddate,aoi,member)  plot(ukcp18sst, range=range(global(ukcp18sst,'range',na.rm=TRUE)))"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_2_preparedata.html","id":"checking-data-inputs-to-downscaling","dir":"Articles","previous_headings":"2 Preprocessing coarse resolution climate data","what":"Checking data inputs to downscaling","title":"2. Data pre-processing","text":"resulting data structures preprocessing can checked ensure missing unexpected values may indicate difference expected SI units incomplete input datasets. particularly advisable inputs spatial downscaling derived one provided functions.","code":"ukcp18rcm<-checkinputs(read_climdata(file.path(dir_out,'ukcp18rcm.Rds')), tstep = \"day\") #> [1] \"Weather observations = 365\" #> [1] \"Timesteps= 24 hrs, max= 24 hrs, min= 24 hrs\" #> [1] \"Observations over 1 years, or 11.97 months, or 364 days.\" #>              Min.    Mean    Max. #> cloud       0.000  76.391 100.000 #> relhum     49.825  81.409  99.518 #> prec        0.000   2.904 134.241 #> pres       96.856 101.749 104.649 #> lwrad     186.724 317.669 395.398 #> swrad       3.090 139.858 352.741 #> tmax        2.823  14.267  29.030 #> tmin       -5.339  11.914  20.299 #> windspeed   0.003   5.036  22.359 #> winddir     0.001 168.808 360.000 #> elevation   8.017 114.508 284.199 #> [1] \"Plotting spatial variation by month: red=max, green=mean, blue=min\" #> [1] \"Plotting wind direction figures\""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"defining-the-area-of-interest","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data","what":"Defining the area of interest","title":"3. Spatial downscaling","text":"projection, resolution extent downscaled area defined providing fine-resolution DTM also acts land/sea mask sea cells NA value.","code":"# Get fine and medium res DTMs from package dir_datasets<-system.file('data',package='mesoclim')  load(file.path(dir_datasets,'dtmf.rda')) load(file.path(dir_datasets,'dtmm.rda'))  dtmm<-unwrap(dtmm) dtmf<-unwrap(dtmf)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"preparing-the-data","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data","what":"Preparing the data","title":"3. Spatial downscaling","text":"Coarse resolution climate ancillary data need prepared outlined vignette('mesoclim_2_preparedata', package='mesoclim'). Sea surface temperature data must also prepared surrounding area time period input climate data.","code":"startdate<-as.POSIXlt('2018/01/01') enddate<-as.POSIXlt('2018/12/31') member<-'01'  #Load prepared climate data ukcp18rcm<-read_climdata(file.path(system.file('extdata/preprepdata',package='mesoclim'),'ukcp18rcm.Rds'))  # Load sea surface data  dir_sst<-system.file('extdata/ukcp18sst',package='mesoclim') ukcp18sst<-create_ukcpsst_data(dir_sst,startdate,enddate,ukcp18rcm$dtmc,member)  # Interpolate SST data to required timesteps sst<-spatial_interpNA(ukcp18sst) sst<-time_interp(sst,ukcp18rcm$tme)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"single-step-downscaling","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data","what":"Single step downscaling","title":"3. Spatial downscaling","text":"Wrapper function allows downscaling single function call, parameters defining processes captured downscaling.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"improvements","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Single step downscaling","what":"Improvements","title":"3. Spatial downscaling","text":"Include dtmf spatialdownscale output. Allow spatialdownscale output spatrasters, packedspatrasters arrays. Include wind temp height spatialdownscale output Write climdata file function converts packed rast arrays? Read climdata file function?","code":"# Downscale one year of future climate data  t0<-now() mesolizd<-spatialdownscale(ukcp18rcm, sst, dtmf, dtmm, basins = NA, cad = TRUE,                            coastal = TRUE, refhgt = ukcp18rcm$tempheight_m,                             uhgt = ukcp18rcm$windheight_m,                             rhmin = 20, pksealevel = TRUE, patchsim = TRUE,                             terrainshade = FALSE,                             precipmethod = \"Tps\", fast = TRUE, noraincut = 0.01) #> Downscaling wind... #> Downscaling temperature... #> Downscaling relative humidity #> Downscaling pressure... #> Downscaling SW radiation... #> Downscaling LW radiation with terrain shading... #> Downscaling precipitation... #> Formatting output... print(now()-t0) #> Time difference of 7.01373 mins  # write_climdata(mesolizd,file.path(system.file('extdata/dscaledata',package='mesoclim'),'mesolizd.rds'))  # mesolizd<-read_climdata(file.path(system.file('extdata/dscaledata',package='mesoclim'),'mesolizd.rds')))"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"display-outputs","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Single step downscaling","what":"Display outputs","title":"3. Spatial downscaling","text":"tabular form times locations: selected rasters days corresponding spatial quantiles (eg days spatial means ata min, median max values): CHECK: Max diurnal temperature range plot shows grid effect?","code":"smry_fun<-function(x) summary(as.vector(.is(x))) rslt<-sapply(mesolizd[names(mesolizd)],smry_fun) stats_df<-as.data.frame(t(round(rslt,3)))[,c('Min.','Mean','Max.')] print(stats_df) #>              Min.    Mean    Max. #> tmin       -5.865  10.249  20.196 #> tmax        4.752  14.508  26.835 #> relhum     44.039  83.855 100.000 #> pres       94.888 101.003 104.588 #> swrad       5.932 132.744 351.706 #> lwrad     220.937 318.311 390.456 #> windspeed   0.034   3.950  24.487 #> winddir     0.000 173.102 360.000 #> prec        0.000   3.143  52.488 for(var in names(mesolizd)){   r<-terra::unwrap(mesolizd[[var]])   names(r)<-rep(var,nlyr(r))   plot_q_layers(r) } # Show spatial range in daily temperatures plot(max(unwrap(mesolizd$tmax)-unwrap(mesolizd$tmin)),main='Max diurnal temperature range', font.main = 1, nc=1) par(mar=c(1,1,1,1),cex.main=0.8, mgp=c(3,0.1,0)) layout(matrix(c(1,2,3,4,1,5,6,7,1,8,9,10),ncol=3),heights=c(1,3,3,3))  #par(mfrow=c(3,3)) plot.new() text(0.5,0.5,\"Spatial mean (green), max (red) and min (blue) by day of year\",cex=1,font=1)  for(v in names(mesolizd)){   r<-unwrap(mesolizd[[v]])   plot_timestats_r(r,v,idx='doy',lgd=FALSE) }"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"multiple-step-downscaling","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data","what":"Multiple step downscaling","title":"3. Spatial downscaling","text":"Spatial downscaling can decomposed effects specific physical processes, effect elevation, coastal cold air drainage temperature. Specific functions downscaling particular effects can applied without needing undertake full downscaling using processes. Note: individual functions, outputs may need processing ensure names times carried .","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"improvements-1","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Improvements","title":"3. Spatial downscaling","text":"Allow option spatrast array outputs? enforce standard spatrast output? Allow passing standard data input list climdata well individual variables Allow variable winddir windspeed downscaling - warning message input wind dir varies?","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"pressure","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Pressure","title":"3. Spatial downscaling","text":"","code":"pres<-presdownscale(ukcp18rcm$climarray$pres, dtmf, ukcp18rcm$dtmc, sealevel = TRUE) names(pres)<-rep('pres',nlyr(pres)) terra::time(pres)<-ukcp18rcm$tme  plot_q_layers(pres)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"cold-air-drainage","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Cold air drainage","title":"3. Spatial downscaling","text":"Requires estimation drainage basins defined topography can carried separately estimation cold-air drainage downscaling.  chosen study area, cold air drainage little effect local temperatures:","code":"# Basins - dtmf should have sea marked as NA basins<-basindelin(dtmf,boundary=2) plot(basins,main='basins') # Calculate using tmin to illustrate ukcp18rcm$climarray$temp<-ukcp18rcm$climarray$tmin tcad<-.tempcad(ukcp18rcm,dtmf,basins,refhgt=ukcp18rcm$tempheight_m)  names(tcad)<-rep('temp_cad',nlyr(tcad)) terra::time(tcad)<-ukcp18rcm$tme  plot_q_layers(tcad)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"temperature-elevation-downscaling","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Temperature elevation downscaling","title":"3. Spatial downscaling","text":"Variable lapse rates derived temperature, humidity pressure applied correct elevation effects downscaling. daily temperatures can carried min max daily values.","code":"tminelev<-.tempelev(ukcp18rcm$climarray$tmin,dtmf,ukcp18rcm$dtmc,ukcp18rcm$climarray$relhum,ukcp18rcm$climarray$pres) tmaxelev<-.tempelev(ukcp18rcm$climarray$tmax,dtmf,ukcp18rcm$dtmc,ukcp18rcm$climarray$relhum,ukcp18rcm$climarray$pres)  names(tminelev)<-rep('tmin_elev',nlyr(tminelev)) terra::time(tminelev)<-ukcp18rcm$tme  names(tmaxelev)<-rep('tmax_elev',nlyr(tmaxelev)) terra::time(tmaxelev)<-ukcp18rcm$tme  plot_q_layers(tminelev) plot_q_layers(tmaxelev) # Check dirunal range of elev downscaling diurnaltmp<-tmaxelev-tminelev names(diurnaltmp)<-rep('diurnal_t_range',nlyr(diurnaltmp)) plot_q_layers(diurnaltmp)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"wind","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Wind","title":"3. Spatial downscaling","text":"Windspeed downscaling aims capture effect elevation sheltering effects topography turn dependent wind direction height ground.","code":"windspeed<-winddownscale(ukcp18rcm$climarray$windspeed, ukcp18rcm$climarray$winddir, dtmf, dtmm, ukcp18rcm$dtmc, uz = ukcp18rcm$windheight_m)  names(windspeed)<-rep('windspeed',nlyr(windspeed)) terra::time(windspeed)<-ukcp18rcm$tme  plot_q_layers(windspeed)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"coastal-effects","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Coastal effects","title":"3. Spatial downscaling","text":"Uses sea surface temperatures, DTMs sea indicated NA values downscaled windspeed estimate effect coastal effects. Coarse, medium fine resolution DTMs used determine effects upwind sea areas. ADD: Guidance selection extent dtmm - far dtms extend downscaling area adequately capture coastal effects??","code":"sstf<-.resample(sst,dtmf) tmincoast<-.tempcoastal(tminelev,sstf,windspeed,ukcp18rcm$climarray$winddir,dtmf,dtmm,ukcp18rcm$dtmc) tmaxcoast<-.tempcoastal(tmaxelev,sstf,windspeed,ukcp18rcm$climarray$winddir,dtmf,dtmm,ukcp18rcm$dtmc)  names(tmincoast)<-rep('tmin_coastef',nlyr(tmincoast)) terra::time(tmincoast)<-ukcp18rcm$tme names(tmaxcoast)<-rep('tmax_coastef',nlyr(tmaxcoast)) terra::time(tmaxcoast)<-ukcp18rcm$tme  plot_q_layers(tmincoast) plot_q_layers(tmaxcoast)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"all-temperature-effects-downscaling","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"All temperature effects downscaling","title":"3. Spatial downscaling","text":"concerned temperature downscaling, wrapper function tempdownscale allows relevant processes run single function.","code":"ukcp18rcm$climarray$temp<-ukcp18rcm$climarray$tmin tmin<-tempdownscale( ukcp18rcm,                   sst,# can be coarse resolution                   dtmf, # fine scale dem                   dtmm , # medium re wider are dem                   basins = basins, # basindelin() output or will calculate                   u2 = windspeed, #Â windspeeds downscaled - or will calculate                   cad = TRUE,                   coastal = TRUE,                   refhgt = ukcp18rcm$tempheight_m, # temp height                   uhgt = ukcp18rcm$windheight_m # wind height                   )  ukcp18rcm$climarray$temp<-ukcp18rcm$climarray$tmax tmax<-tempdownscale(ukcp18rcm,                   sst,# can be coarse                   dtmf, # fine scale dem                   dtmm , # medium re wider are dem                   basins = basins, # basindelin() output                   u2 = windspeed, #Â windspeeds downscaled                   cad = TRUE,                   coastal = TRUE,                   refhgt = ukcp18rcm$tempheight_m, # temp height                   uhgt = ukcp18rcm$windheight_m # wind height                   )  plot_q_layers(tmin) plot_q_layers(tmax) diurnaltmp<-tmax-tmin names(diurnaltmp)<-rep('Diurnal_temp_range',nlyr(diurnaltmp)) plot_q_layers(diurnaltmp)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"precipitation","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Precipitation","title":"3. Spatial downscaling","text":"precipdownscale() function provides various options methods downscale rainfall.","code":"method<-'Elev' precelev<-precipdownscale(   ukcp18rcm$climarray$prec,   dtmf,   ukcp18rcm$dtmc,   method = method,   fast = TRUE,   noraincut = 0.01,   patchsim = FALSE,   nsim = dim( ukcp18rcm$climarray$prec)[3] ) names(precelev)<-rep('prec_elev',nlyr(precelev)) terra::time(precelev)<-ukcp18rcm$tme plot_q_layers(precelev) method<-'Tps' prectps<-precipdownscale(   ukcp18rcm$climarray$prec,   dtmf,   ukcp18rcm$dtmc,   method = method,   fast = TRUE,   noraincut = 0.01,   patchsim = FALSE,   nsim = dim( ukcp18rcm$climarray$prec)[3] ) names(prectps)<-rep('prec_tps',nlyr(prectps)) terra::time(prectps)<-ukcp18rcm$tme  plot_q_layers(prectps) prec<-prectps"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"longwave-radiation-downscale","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Longwave radiation downscale","title":"3. Spatial downscaling","text":"Longwave downscaling accounts effects terrain shading effect skyview.","code":"# simple downscaling lwf<-.resample(.rast(ukcp18rcm$climarray$lwrad,ukcp18rcm$dtmc), dtmf, msk=TRUE) # corrected for skyview   svf<-.rta(.skyview(dtmf),dim(lwf)[3]) lwrad<-.rast(.is(lwf)*svf,dtmf)  names(lwrad)<-rep('lwrad',nlyr(lwrad)) terra::time(lwrad)<-ukcp18rcm$tme plot_q_layers(lwrad)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_3_spdscale.html","id":"shortwave-radiation-downscale","dir":"Articles","previous_headings":"3. Spatial Downscaling of UKCP18 regional climate data > Multiple step downscaling","what":"Shortwave radiation downscale","title":"3. Spatial downscaling","text":"Can carried without cloud patchiness terrain shadingâ€¦  â€¦ cloud patchinessâ€¦","code":"swrad<-swdownscale(ukcp18rcm$climarray$swrad,as.POSIXlt(ukcp18rcm$tme, tz = \"UTC\"),dtmf,ukcp18rcm$dtmc,patchsim = FALSE,terrainshade = FALSE)  names(swrad)<-rep('swrad',nlyr(swrad)) terra::time(swrad)<-ukcp18rcm$tme                         plot_q_layers(swrad) swradp<-swdownscale(ukcp18rcm$climarray$swrad,ukcp18rcm$tme,dtmf,ukcp18rcm$dtmc,patchsim = TRUE,nsim= length(ukcp18rcm$tme),terrainshade = FALSE)  names(swradp)<-rep('swrad_with_patchiness',nlyr(swradp)) terra::time(swradp)<-ukcp18rcm$tme                         plot_q_layers(swradp)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_4_tmpdscale.html","id":"temporal-downscaling","dir":"Articles","previous_headings":"","what":"4. Temporal downscaling","title":"4. Temporal downscaling","text":"efficiency theoretical reasons spatial temporal downscaling v.v?","code":"# Get spatially downscaled data  mesolizd<-read_climdata(file.path(system.file('extdata/dscaledata',package='mesoclim'),'mesolizd.rds'))"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_4_tmpdscale.html","id":"daily-to-hourly-temperature-downscaling","dir":"Articles","previous_headings":"4. Temporal downscaling","what":"Daily to hourly temperature downscaling","title":"4. Temporal downscaling","text":"one yearâ€™s daily timeseries spatially downscaled data.   Functions also permit daily hourly downscaling climate variables. Change variable names - tme parameter etc standardise across functions","code":"# Generate hourly timeseries t0<-now() hrtemps<-hourlytemp(mesolizd$tmin, mesolizd$tmax, srte = 0.09)  print(now()-t0) #> Time difference of 1.380336 mins # Plot hourly timeseries for contrasting days: spatial mean,min,max par(mfrow=c(1,2)) plot_timestats_r(hrtemps[[1:96]],var='Temperatures for 1-4 Jan 2018',idx='hour',lgd=FALSE) plot_timestats_r(hrtemps[[5328:5423]],var='Temperatures for 11-14 July 2018',idx='hour',lgd=FALSE) # Plot hourly rasters  plot_q_layers(hrtemps,p=c(0, 0.5, 1),fun='mean', common_scale=FALSE)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_4_tmpdscale.html","id":"shortwave-radiation-downscaling","dir":"Articles","previous_headings":"4. Temporal downscaling","what":"Shortwave radiation downscaling","title":"4. Temporal downscaling","text":"working","code":"swradhr<-swrad_dailytohourly(mesolizd$swrad, as.POSIXlt(terra::time(mesolizd$swrad)), clearsky = NA, r = dtmf, adjust = TRUE)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_5_biascorrect.html","id":"bias-correction","dir":"Articles","previous_headings":"","what":"5 Bias Correction","title":"5. Bias correction","text":"Compares modeled historic data observational data. Requires comparable raster stacks observed modeled data.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_5_biascorrect.html","id":"observational-data","dir":"Articles","previous_headings":"5 Bias Correction","what":"Observational data","title":"5. Bias correction","text":"observed data make use HadUK 1km gridded data Lizard year 2018.","code":"dir_haduk<-system.file('extdata/haduk',package='mesoclim')  tminfiles<- list.files(dir_haduk, pattern='tasmin') tmaxfiles<- list.files(dir_haduk, pattern='tasmax') rainfiles<- list.files(dir_haduk, pattern='rainfall')  tminhuk<-rast(file.path(dir_haduk,tminfiles)) tmaxhuk<-rast(file.path(dir_haduk,tmaxfiles)) prechuk<-rast(file.path(dir_haduk,rainfiles))  # Crop to area of interest dir_datasets<-system.file('data',package='mesoclim') load(file.path(dir_datasets,'dtmf.rda')) dtmf<-unwrap(dtmf)  e<-ext(project(dtmf,crs(tminhuk))) tminhuk<-crop(tminhuk,e) tmaxhuk<-crop(tmaxhuk,e) prechuk<-crop(prechuk,e)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_5_biascorrect.html","id":"historic-modelled-data","dir":"Articles","previous_headings":"5 Bias Correction","what":"Historic modelled data","title":"5. Bias correction","text":"Use model outputs historical period observational data. Model data directly downscaled resolution observed data (case 1km) aggregate already downscaled data.","code":"# Get spatially downscaled data  mesolizd<-read_climdata(file.path(system.file('extdata/dscaledata',package='mesoclim'),'mesolizd.rds')) tmin<-.resample(unwrap(mesolizd$tmin),tminhuk[[1]]) tmax<-.resample(unwrap(mesolizd$tmax),tminhuk[[1]]) prec<-.resample(unwrap(mesolizd$prec),tminhuk[[1]])"},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_5_biascorrect.html","id":"min-daily-temperature","dir":"Articles","previous_headings":"5 Bias Correction > Calculate bias correction models for each variable","what":"Min daily temperature","title":"5. Bias correction","text":"","code":"tmn_bmods<-biascorrect(tminhuk, tmin, tmin,mod_out = TRUE, rangelims = NA) print(tmn_bmods$models) #> [[1]] #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> v1 ~ s(v2) #>  #> Estimated degrees of freedom: #> 8.94  total = 9.94  #>  #> GCV score: 0.02652613 mn_stats<-c(app(tminhuk/tmin,mean),app(tminhuk/tmin,sd),app(tminhuk/tmin,max)) cf_mins<- c(app(tminhuk,min),app(tmin,min))  names(cf_mins)<-c('Yr tmn HadUK Observed','Yr tmn UKCP18 downsscaled') plot(cf_mins)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_5_biascorrect.html","id":"max-daily-temperature","dir":"Articles","previous_headings":"5 Bias Correction > Calculate bias correction models for each variable","what":"Max daily temperature","title":"5. Bias correction","text":"","code":"tmx_bmods<-biascorrect(tmaxhuk, tmin, tmin,mod_out = TRUE, rangelims = NA) print(tmx_bmods$models) #> [[1]] #>  #> Family: gaussian  #> Link function: identity  #>  #> Formula: #> v1 ~ s(v2) #>  #> Estimated degrees of freedom: #> 8.85  total = 9.85  #>  #> GCV score: 0.07824545 cf_maxs<- c(app(tmaxhuk,max),app(tmax,max))  names(cf_maxs)<-c('Yr tmx HadUK Observed','Yr tmx UKCP18 downsscaled') plot(cf_maxs) mx_stats<-c(app(abs(tmaxhuk/tmax),mean),app(abs(tmaxhuk/tmax),sd),app(abs(tmaxhuk/tmax),max)) plot(mx_stats)"},{"path":"https://jrmosedale.github.io/mesoclim/articles/mesoclim_5_biascorrect.html","id":"daily-precipitation","dir":"Articles","previous_headings":"5 Bias Correction > Calculate bias correction models for each variable","what":"Daily precipitation","title":"5. Bias correction","text":"","code":"prec_bmods<-precipcorrect(prechuk, prec, prec, mod_out = TRUE, rangelim = NA)  plot(unwrap(prec_bmods$mu_tot),main='Total rainfall') plot(unwrap(prec_bmods$mu_frac ),main='Proportion of rainy days')"},{"path":"https://jrmosedale.github.io/mesoclim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ilya Maclean. Maintainer. Alexandra Gardner. Author. Jonathan Mosedale. Author.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gardner , Mosedale J (2024). mesoclim: Climate downscaling bias correction R. R package version 0.1.0, https://github.com/ilyamaclean/mesoclim.","code":"@Manual{,   title = {mesoclim: Climate downscaling and bias correction with R},   author = {Alexandra Gardner and Jonathan Mosedale},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/ilyamaclean/mesoclim}, }"},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mesoclimate downscaling and bias correction with R","text":"can install development version mesoclim GitHub :","code":"# install.packages(\"devtools\") # devtools::install_github(\"ilyamaclean/mesoclim\")"},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Mesoclimate downscaling and bias correction with R","text":"mesoclim package provides functions enable mechanistic downscaling climate data coarse temporal /spatial resolutions finer resolutions mesoclimatic processes, effects elevation, cold air drainage coastal exposure, significantly affect local weather conditions vary across landscape. package permits downscaling climate data spatial resolution 10s kilometers resolutions single kilometer. permit modelling microclimatic processes -canopy -ground conditions, provides suitable data subsequent microclimate modelling (refs packages). functions organised around key steps downscaling work flow:","code":""},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"id_1-downloading-climate-data-inputs","dir":"","previous_headings":"Overview","what":"1 Downloading climate data inputs","title":"Mesoclimate downscaling and bias correction with R","text":"Functions exist download common sources historic future global climate ancillary data available repositories. Typically data spatial resolutions 10s kilometers daily hourly temporal resolution. See: vignette(\"mesoclim_1_download\")","code":""},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"id_2-preprocessing-data-inputs","dir":"","previous_headings":"Overview","what":"2 Preprocessing data inputs","title":"Mesoclimate downscaling and bias correction with R","text":"Functions generate standard inputs source files coarse resolution climate ancillary data. inputs required subsequent mesoclimate downscaling. Functions also provided check inputs provide tabular graphical summaries input data. {Something using weather station inputs??} See: vignette(\"mesoclim_2_preparedata\")","code":""},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"id_3-spatial-downscaling","dir":"","previous_headings":"Overview","what":"3 Spatial downscaling","title":"Mesoclimate downscaling and bias correction with R","text":"Functions capture effect specific processes elevation, coastal exposure cold air drainage, whereas wrapper functions apply ensemble chosen processes downscale climate data finer resolutions. Available function allow high degree control mesoclimatic effects used downscaling, reflecting user interest /whether particular processes partially captured input datasets. See: vignette(\"mesoclim_3_spdscale\")","code":""},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"id_4-temporal-downscaling","dir":"","previous_headings":"Overview","what":"4 Temporal downscaling","title":"Mesoclimate downscaling and bias correction with R","text":"Functions allow conversion daily hourly estimates climate conditions. See: vignette(\"mesoclim_4_tmpdscale\")","code":""},{"path":"https://jrmosedale.github.io/mesoclim/index.html","id":"id_5-bias-correction","dir":"","previous_headings":"Overview","what":"5 Bias correction","title":"Mesoclimate downscaling and bias correction with R","text":"Functions provided statistically compare different climate datasets correct one set data another. Typically functions used correct modelled data using long timeseries observational data. See: vignette(\"mesoclim_5_biascorrect\") Functions also provided carry simple data checking, statistical summaries graphing climate datasets.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/basindelin.html","id":null,"dir":"Reference","previous_headings":"","what":"delineate hydrological or cold-air drainage basins â€” basindelin","title":"delineate hydrological or cold-air drainage basins â€” basindelin","text":"function basindelin uses digital elevation dataset delineate hydrological basins, merging adjoining basis seperated low boundary specified.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/basindelin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"delineate hydrological or cold-air drainage basins â€” basindelin","text":"","code":"basindelin(dtm, boundary = 0)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/basindelin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"delineate hydrological or cold-air drainage basins â€” basindelin","text":"dtm SpatRast object elevations boundary optional numeric value. greater 0, adjoining basins separated elevation differences < boundary merged (see details.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/basindelin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"delineate hydrological or cold-air drainage basins â€” basindelin","text":"SpatRast basins sequentially numbered integers.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/basindelin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"delineate hydrological or cold-air drainage basins â€” basindelin","text":"function searches lowest grid cell dtm assigns basin 1. immediately adjacent pixels (8 directions) previously assigned assigned part basin higher focal cell. process repeated higher cells found. next lowest unassigned grid cell identified assigned basin 2 process repeated grid cells assigned basin number. boundary > 0, edge grid cells identified height difference surrounding cells calculated. height difference less boundary, basins merged basins renumbered sequentially.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/basindelin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"delineate hydrological or cold-air drainage basins â€” basindelin","text":"","code":"library(terra) bsn<-basindelin(rast(dtmf)) plot(bsn)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies bias correction to one climate variable â€” biascorrect","title":"Applies bias correction to one climate variable â€” biascorrect","text":"function biascorrect applies bias correction spatial climate dataset","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies bias correction to one climate variable â€” biascorrect","text":"","code":"biascorrect(hist_obs, hist_mod, fut_mod = NA, mod_out = FALSE, rangelims = NA)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies bias correction to one climate variable â€” biascorrect","text":"hist_obs stacked SpatRaster climate observations. hist_mod stacked SpatRaster modelled climate data period hist_obs. Reprojected resampled match hist_obs necessary. fut_mod optionally, SpatRaster modelled climate data e.g. future period corrections applied. Reprojected resampled match hist_obs necessary. supplied mod_out = FALSE corrections applied hist_mod mod_out optional logical indicating whether return object class biascorrectmodels, allows form bias correction applied datasets multiple time periods using biascorrect_apply(). rangelims fractional amount range values hist_obs values returned dataset can vary. .e. set 1.1, values given grid cell returned dataset exceed 1.1 times range values corresponding grid cell hist_obs. supplied (default), returned values unbounded.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies bias correction to one climate variable â€” biascorrect","text":"mod_out = FALSE, SpatRaster bias corrected data. mod_out = TRUE  object class biascorrectmodels,","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies bias correction model to climate variable â€” biascorrect_apply","title":"Applies bias correction model to climate variable â€” biascorrect_apply","text":"function biascorrect_apply applies set bias corrections derived using bias_correct spatial climate dataset","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies bias correction model to climate variable â€” biascorrect_apply","text":"","code":"biascorrect_apply(fut_mod, biasmods, rangelims = NA)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies bias correction model to climate variable â€” biascorrect_apply","text":"fut_mod SpatRaster modelled climate data e.g. future period corrections applied. biasmods object class biascorrectmodels derived using biascorrect().","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect_apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies bias correction model to climate variable â€” biascorrect_apply","text":"SpatRaster matching fut_mod climate data bias corrected.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/biascorrect_apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Applies bias correction model to climate variable â€” biascorrect_apply","text":"biascorrect_apply function allows bias correction applied multiple datasets, spanning e.g. several future time periods climate scenarious. spatial extent fut_mod must least partially overlap hist_obs running biascorrect corrected values returned overlapping area","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/blendtemp_hadukera5.html","id":null,"dir":"Reference","previous_headings":"","what":"Blends Met Office and ERA5 data to produce hourly 1km resolution temperature data â€” blendtemp_hadukera5","title":"Blends Met Office and ERA5 data to produce hourly 1km resolution temperature data â€” blendtemp_hadukera5","text":"function blendtemp_hadukera5 ERA5 data 1 km grid resoltuion, calculates diurnal cycle grid cell, adjust maximum minimum daily temperatures one km met office data.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/blendtemp_hadukera5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blends Met Office and ERA5 data to produce hourly 1km resolution temperature data â€” blendtemp_hadukera5","text":"","code":"blendtemp_hadukera5(tasmin, tasmax, era5t2m)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/blendtemp_hadukera5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blends Met Office and ERA5 data to produce hourly 1km resolution temperature data â€” blendtemp_hadukera5","text":"tasmin stacked SpatRaster haduk daily minimum temperatures (deg C) tasmax stacked SpatRaster haduk daily maximum temperatures (deg C) era5t2m stacked SpatRaster hourly ERA5 temperatures (deg C K)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/change_rast_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert units and values of a SpatRast â€” change_rast_units","title":"Convert units and values of a SpatRast â€” change_rast_units","text":"Convert units values SpatRast","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/change_rast_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert units and values of a SpatRast â€” change_rast_units","text":"","code":"change_rast_units(r, to_unit)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/change_rast_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert units and values of a SpatRast â€” change_rast_units","text":"r SpatRaster defined units to_unit units output SpatRaster","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/change_rast_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert units and values of a SpatRast â€” change_rast_units","text":"SpatRaster new units","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/checkinputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and summarise coarse resolution climate data inputs â€” checkinputs","title":"Check and summarise coarse resolution climate data inputs â€” checkinputs","text":"Check summarise coarse resolution climate data inputs","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/checkinputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and summarise coarse resolution climate data inputs â€” checkinputs","text":"","code":"checkinputs(input_list, tstep = c(\"hour\", \"day\"))"},{"path":"https://jrmosedale.github.io/mesoclim/reference/checkinputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and summarise coarse resolution climate data inputs â€” checkinputs","text":"input_list list climate associated variables output functions like 'ukcp18toclimarray' tstep string decribing whether input data hour day","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/checkinputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and summarise coarse resolution climate data inputs â€” checkinputs","text":"possible returns inputs suitable downsclaing /warning messages input data unexpected values Also prints summary statistics graphs variable","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/checkinputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and summarise coarse resolution climate data inputs â€” checkinputs","text":"","code":"checkinputs(input_list, tstep = \"day\") #> Error in eval(expr, envir, enclos): object 'input_list' not found"},{"path":"https://jrmosedale.github.io/mesoclim/reference/clearskyrad.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates clear sky radiation â€” clearskyrad","title":"Calculates clear sky radiation â€” clearskyrad","text":"Calculates clear sky radiation","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/clearskyrad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates clear sky radiation â€” clearskyrad","text":"","code":"clearskyrad(jd, lt, lat, long, tc = 15, rh = 80, pk = 101.3)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/clearskyrad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates clear sky radiation â€” clearskyrad","text":"jd astronomical Julian day lt local time (decimal hours) lat latitude (decimal degrees) long longitude (decimal degrees) tc temperature (deg C) rh relative humidity (percentage) pk atmospheric pressure (kPa)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/clearskyrad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates clear sky radiation â€” clearskyrad","text":"expected clear-sky radiation (W/m^2)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/coastalexposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates land to sea ratio in upwind direction â€” coastalexposure","title":"Calculates land to sea ratio in upwind direction â€” coastalexposure","text":"function coastalexposure used calculate inverse distance^2 weighted ratio land sea specified upwind direction.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/coastalexposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates land to sea ratio in upwind direction â€” coastalexposure","text":"","code":"coastalexposure(landsea, e, wdir)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/coastalexposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates land to sea ratio in upwind direction â€” coastalexposure","text":"landsea SpatRast NAs (representing sea) non-NA value (representing land). object larger extent land-sea ratio values needed, calculation requires land / sea coverage assessed upwind outside target area. e terra::ext object indicating region land-sea ratios required. wdir optional single numeric value specifying direction (decimal degrees) wind blowing.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/coastalexposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates land to sea ratio in upwind direction â€” coastalexposure","text":"SpatRast representing values ranging zero (upwind pixels sea) one (upwind pixels land).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/coastalexposure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates land to sea ratio in upwind direction â€” coastalexposure","text":"function calculates coefficient ratio land sea pixels specified upwind direction, across elements SpatRast, weighted using inverse distance squared function, nearby pixels greater influence coefficient.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/coastalexposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates land to sea ratio in upwind direction â€” coastalexposure","text":"","code":"library(terra) e<-ext(rast(dtmf)) ce1 <- coastalexposure(rast(landsea), e, 180) ce2 <- coastalexposure(rast(landsea), e, 270) par(mfrow=c(2,1)) plot(ce1, main = \"Land to sea weighting, southerly wind\") plot(ce2, main = \"Land to sea weighting, westerly wind\")"},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_era5temps.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies bias correction to UK era5 temperature data â€” correct_era5temps","title":"Applies bias correction to UK era5 temperature data â€” correct_era5temps","text":"function correct_era5temps applies automatic bias correction era5 temperature data data correct unaturally low diurnal temperature fluctuations coastal grid cells.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_era5temps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies bias correction to UK era5 temperature data â€” correct_era5temps","text":"","code":"correct_era5temps(era5hourly, era5correctmodels)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_era5temps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies bias correction to UK era5 temperature data â€” correct_era5temps","text":"era5hourly stacked SpatRast hourly ERA5 temperature data part UK. era5correctmodels list model correction coefficients neach UK grid cell. Available: https://universityofexeteruk-.sharepoint.com/:f:/g/personal/i_m_d_maclean_exeter_ac_uk/EjxJdJq0MClFqUU3LATlcnEBo1cGFiUAxqLQALNNxvdZaw?e=wLR2Rf Zenodo link added dreckly.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_era5temps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies bias correction to UK era5 temperature data â€” correct_era5temps","text":"SpatRast bias corrected temperature data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_era5temps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Applies bias correction to UK era5 temperature data â€” correct_era5temps","text":"era5correctmodels derived applying biascorrect() 2018 dataset era5 temperature data, calibrating Met office data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_ukcp_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrects time series of UKCP18 360 day year data to valid calendar dates â€” correct_ukcp_dates","title":"Corrects time series of UKCP18 360 day year data to valid calendar dates â€” correct_ukcp_dates","text":"Converts 12 x 30 day monthly data provided UKCP18 data corresponding actual calendar dates reassigning invalid dates (eg 29-30 Feb). add missing dates (eg 31st May). Output used fill_calendar_data()","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_ukcp_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corrects time series of UKCP18 360 day year data to valid calendar dates â€” correct_ukcp_dates","text":"","code":"correct_ukcp_dates(ukcp_dates)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_ukcp_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corrects time series of UKCP18 360 day year data to valid calendar dates â€” correct_ukcp_dates","text":"ukcp_dates vector POSIXlt UKCP18 dates  returned 'get_ukcp18_dates()'.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/correct_ukcp_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Corrects time series of UKCP18 360 day year data to valid calendar dates â€” correct_ukcp_dates","text":"vector valid date strings form 'yyy-dd-mm'","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/create_ukcpsst_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create UKCP sea surface temperature rast stack from ncdf files â€” create_ukcpsst_data","title":"Create UKCP sea surface temperature rast stack from ncdf files â€” create_ukcpsst_data","text":"Create UKCP sea surface temperature rast stack ncdf files","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/create_ukcpsst_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create UKCP sea surface temperature rast stack from ncdf files â€” create_ukcpsst_data","text":"","code":"create_ukcpsst_data(   dir_data,   startdate,   enddate,   aoi = NA,   members = c(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",     \"13\", \"14\", \"15\"),   v = \"SST\" )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/create_ukcpsst_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create UKCP sea surface temperature rast stack from ncdf files â€” create_ukcpsst_data","text":"dir_data directory holding SST .nc files downloaded ceda startdate start date POSIXlt enddate end date POSIXlt aoi SpatRaster, SpatVector sf object defining area interest crop data. NA corpping occurs members model members included v = SST sea surface temperature","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/difprop.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","title":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","text":"difprop calculates proportion incoming shortwave radiation diffuse radiation using method Skartveit et al. (1998) Solar Energy, 63: 173-183.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/difprop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","text":"","code":"difprop(rad, julian, localtime, lat, long, hourly = FALSE, merid = 0, dst = 0)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/difprop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","text":"rad vector incoming shortwave radiation values (W/m^2) julian Julian day returned julday() localtime single numeric value representing local time (decimal hour, 24 hour clock) lat single numeric value representing latitude location partitioned radiation required (decimal degrees, -ve south equator). long single numeric value representing longitude location partitioned radiation required (decimal degrees, -ve west Greenwich meridian). hourly specifies whether values rad hourly (see details). merid optional numeric value representing longitude (decimal degrees) local time zone meridian (0 GMT). dst optional numeric value representing time difference timezone meridian (hours, e.g. +1 BST merid = 0).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/difprop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","text":"vector diffuse fractions (either MJ m-2 hr-1 W m-2).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/difprop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","text":"method assumes environment snow free. overall cloud cover heterogeneity cloud cover affect diffuse fraction. Breaks extensive cloud deck may primarily enhance beam irradiance, whereas scattered clouds may enhance diffuse irradiance leave beam irradiance unaffected.  consequence, hourly data available, index applied detect presence variable/inhomogeneous clouds, based variability radiation hour question values preceding deciding hour.  hourly data unavailable, average variability determined radiation intensity.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/difprop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the diffuse fraction from incoming shortwave radiation â€” difprop","text":"","code":"rad <- c(1:1352) # typical values of radiation in W/m^2 jd <- julday(2022, 6, 21) # julian day #> Error in julday(2022, 6, 21): could not find function \"julday\" dfr <- difprop(rad, jd, 12, 50, -5) #> Error in eval(expr, envir, enclos): object 'jd' not found plot(dfr ~ rad, type = \"l\", lwd = 2, xlab = expression(paste(\"Incoming shortwave radiation (\", W*M^-2, \")\")), ylab = \"Diffuse fraction\") #> Error in eval(predvars, data, env): object 'dfr' not found"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basindelin.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for delineating basins with option for boundary > 0 â€” .basindelin","title":"Internal function for delineating basins with option for boundary > 0 â€” .basindelin","text":"Internal function delineating basins option boundary > 0","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basindelin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for delineating basins with option for boundary > 0 â€” .basindelin","text":"","code":".basindelin(dtm, boundary = 0)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basindelinCpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for C++ function â€” .basindelinCpp","title":"Wrapper for C++ function â€” .basindelinCpp","text":"Wrapper C++ function","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basindelinCpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for C++ function â€” .basindelinCpp","text":"","code":".basindelinCpp(dtm)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basindelin_big.html","id":null,"dir":"Reference","previous_headings":"","what":"Function used for delineating basins with big dtms â€” .basindelin_big","title":"Function used for delineating basins with big dtms â€” .basindelin_big","text":"Function used delineating basins big dtms","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basindelin_big.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function used for delineating basins with big dtms â€” .basindelin_big","text":"","code":".basindelin_big(dtm, boundary = 0, tilesize = 100, plotprogress = FALSE)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basinmerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge basins based on specified boundary â€” .basinmerge","title":"Merge basins based on specified boundary â€” .basinmerge","text":"Merge basins based specified boundary","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basinmerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge basins based on specified boundary â€” .basinmerge","text":"","code":".basinmerge(dtm, bsn, boundary = 0.25)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basinmosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Mosaic tiled basins merging common joins â€” .basinmosaic","title":"Mosaic tiled basins merging common joins â€” .basinmosaic","text":"Mosaic tiled basins merging common joins","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-basinmosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mosaic tiled basins merging common joins â€” .basinmosaic","text":"","code":".basinmosaic(b1, b2)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-cadpotential.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cold-air drainage potential (spatial) â€” .cadpotential","title":"Calculate cold-air drainage potential (spatial) â€” .cadpotential","text":"Calculate cold-air drainage potential (spatial)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-cadpotential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cold-air drainage potential (spatial) â€” .cadpotential","text":"","code":".cadpotential(dtm, basins = NA, refhgt = 2)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-cfcelev.html","id":null,"dir":"Reference","previous_headings":"","what":"Appply elevation adjustment to cloud fractional cover â€” .cfcelev","title":"Appply elevation adjustment to cloud fractional cover â€” .cfcelev","text":"Appply elevation adjustment cloud fractional cover","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-cfcelev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Appply elevation adjustment to cloud fractional cover â€” .cfcelev","text":"","code":".cfcelev(csfc, dtmf, dtmc)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-clearskyrad.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate clear sky radiation â€” .clearskyrad","title":"Calculate clear sky radiation â€” .clearskyrad","text":"Calculate clear sky radiation","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-clearskyrad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate clear sky radiation â€” .clearskyrad","text":"","code":".clearskyrad(tme, lat, long, tc = 15, rh = 80, pk = 101.3)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-correctcoastal.html","id":null,"dir":"Reference","previous_headings":"","what":"function for applying correction factor to coastal effects to account for\r\ndata resolution â€” .correctcoastal","title":"function for applying correction factor to coastal effects to account for\r\ndata resolution â€” .correctcoastal","text":"function applying correction factor coastal effects account data resolution","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-correctcoastal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function for applying correction factor to coastal effects to account for\r\ndata resolution â€” .correctcoastal","text":"","code":".correctcoastal(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-dewpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate dewpoint â€” .dewpoint","title":"Calculate dewpoint â€” .dewpoint","text":"Calculate dewpoint","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-dewpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate dewpoint â€” .dewpoint","text":"","code":".dewpoint(ea, tc)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-docolumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Do an entire column of tiled basins â€” .docolumn","title":"Do an entire column of tiled basins â€” .docolumn","text":"entire column tiled basins","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-docolumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do an entire column of tiled basins â€” .docolumn","text":"","code":".docolumn(dtm, tilesize, boundary, x)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-ehr.html","id":null,"dir":"Reference","previous_headings":"","what":"expand daily array to hourly array â€” .ehr","title":"expand daily array to hourly array â€” .ehr","text":"expand daily array hourly array","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-ehr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expand daily array to hourly array â€” .ehr","text":"","code":".ehr(a)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-flowdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate flow direction â€” .flowdir","title":"Calculate flow direction â€” .flowdir","text":"Calculate flow direction","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-flowdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate flow direction â€” .flowdir","text":"","code":".flowdir(md)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-is.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if input is a SpatRaster or PackedSpatRaster and convert to matrix or array\r\nif it is â€” .is","title":"Check if input is a SpatRaster or PackedSpatRaster and convert to matrix or array\r\nif it is â€” .is","text":"Check input SpatRaster PackedSpatRaster convert matrix array ","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-is.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if input is a SpatRaster or PackedSpatRaster and convert to matrix or array\r\nif it is â€” .is","text":"","code":".is(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-jday.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the astronomical Julian day â€” .jday","title":"Calculates the astronomical Julian day â€” .jday","text":"Calculates astronomical Julian day","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-jday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the astronomical Julian day â€” .jday","text":"","code":".jday(tme)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-latlongfromrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get latitude and longitude of centre of r â€” .latlongfromrast","title":"Get latitude and longitude of centre of r â€” .latlongfromrast","text":"Get latitude longitude centre r","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-latlongfromrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get latitude and longitude of centre of r â€” .latlongfromrast","text":"","code":".latlongfromrast(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-latlongfromraster.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates latitude and longitude from SpatRaster object â€” .latlongfromraster","title":"Calculates latitude and longitude from SpatRaster object â€” .latlongfromraster","text":"Calculates latitude longitude SpatRaster object","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-latlongfromraster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates latitude and longitude from SpatRaster object â€” .latlongfromraster","text":"","code":".latlongfromraster(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-latsfromr.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a matrix of latitudes form a terra::SpatRaster object\r\nInputs:\r\nr - a terra::SpatRaster object\r\nReturns a matrix of latidues â€” .latsfromr","title":"Produces a matrix of latitudes form a terra::SpatRaster object\r\nInputs:\r\nr - a terra::SpatRaster object\r\nReturns a matrix of latidues â€” .latsfromr","text":"Produces matrix latitudes form terra::SpatRaster object Inputs: r - terra::SpatRaster object Returns matrix latidues","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-latsfromr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a matrix of latitudes form a terra::SpatRaster object\r\nInputs:\r\nr - a terra::SpatRaster object\r\nReturns a matrix of latidues â€” .latsfromr","text":"","code":".latsfromr(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-lonsfromr.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a matrix of longitudes form a terra::SpatRaster object\r\nInputs:\r\nr - a terra::SpatRaster object\r\nReturns a matrix of longitudes â€” .lonsfromr","title":"Produces a matrix of longitudes form a terra::SpatRaster object\r\nInputs:\r\nr - a terra::SpatRaster object\r\nReturns a matrix of longitudes â€” .lonsfromr","text":"Produces matrix longitudes form terra::SpatRaster object Inputs: r - terra::SpatRaster object Returns matrix longitudes","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-lonsfromr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a matrix of longitudes form a terra::SpatRaster object\r\nInputs:\r\nr - a terra::SpatRaster object\r\nReturns a matrix of longitudes â€” .lonsfromr","text":"","code":".lonsfromr(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-mav.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate moving average â€” .mav","title":"Calculate moving average â€” .mav","text":"Calculate moving average","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-mav.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate moving average â€” .mav","text":"","code":".mav(x, n = 5)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-multi_download.html","id":null,"dir":"Reference","previous_headings":"","what":"ILya: Have changed this to an internal function, including calls to it. â€” .multi_download","title":"ILya: Have changed this to an internal function, including calls to it. â€” .multi_download","text":"ILya: changed internal function, including calls .","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-multi_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ILya: Have changed this to an internal function, including calls to it. â€” .multi_download","text":"","code":".multi_download(f, url, dir_out, h)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SpatRaster object using a template â€” .rast","title":"Create SpatRaster object using a template â€” .rast","text":"Create SpatRaster object using template","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SpatRaster object using a template â€” .rast","text":"","code":".rast(m, tem)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-resample.html","id":null,"dir":"Reference","previous_headings":"","what":"version of terra resample that equates to NA.RM = TRUE\r\nr1 resampled to same geometry as r2\r\nmsk=TRUE if output to be masked out where r2 cells = NA\r\nmethod for resample and project can be set â€” .resample","title":"version of terra resample that equates to NA.RM = TRUE\r\nr1 resampled to same geometry as r2\r\nmsk=TRUE if output to be masked out where r2 cells = NA\r\nmethod for resample and project can be set â€” .resample","text":"version terra resample equates NA.RM = TRUE r1 resampled geometry r2 msk=TRUE output masked r2 cells = NA method resample project can set","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"version of terra resample that equates to NA.RM = TRUE\r\nr1 resampled to same geometry as r2\r\nmsk=TRUE if output to be masked out where r2 cells = NA\r\nmethod for resample and project can be set â€” .resample","text":"","code":".resample(r1, r2, msk = FALSE, method = \"bilinear\")"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-rta.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert matrix or rast to array â€” .rta","title":"Convert matrix or rast to array â€” .rta","text":"Convert matrix rast array","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-rta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert matrix or rast to array â€” .rta","text":"","code":".rta(r, n)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-satvap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate saturated vapour pressure â€” .satvap","title":"Calculate saturated vapour pressure â€” .satvap","text":"Calculate saturated vapour pressure","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-satvap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate saturated vapour pressure â€” .satvap","text":"","code":".satvap(tc)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-simpatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cloud or rain patchiness â€” .simpatch","title":"Simulate cloud or rain patchiness â€” .simpatch","text":"Simulate cloud rain patchiness","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-simpatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cloud or rain patchiness â€” .simpatch","text":"","code":".simpatch(varf, af, n = dim(varf)[3], varn = \"precip\")"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-solalt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the solar altitude â€” .solalt","title":"Calculates the solar altitude â€” .solalt","text":"Calculates solar altitude","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-solalt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the solar altitude â€” .solalt","text":"","code":".solalt(localtime, lat, long, jd, merid = 0, dst = 0)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-soltime.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates solar time â€” .soltime","title":"Calculates solar time â€” .soltime","text":"Calculates solar time","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-soltime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates solar time â€” .soltime","text":"","code":".soltime(localtime, long, jd, merid = 0, dst = 0)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-tempcad.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale temperature with cold air drainage effects â€” .tempcad","title":"Downscale temperature with cold air drainage effects â€” .tempcad","text":"Downscale temperature cold air drainage effects","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-tempcad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale temperature with cold air drainage effects â€” .tempcad","text":"","code":".tempcad(climdata, dtmf, basins = NA, refhgt = 2)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-tempelev.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscales temperature for elevation effects â€” .tempelev","title":"Downscales temperature for elevation effects â€” .tempelev","text":"Downscales temperature elevation effects","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-tempelev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscales temperature for elevation effects â€” .tempelev","text":"","code":".tempelev(tc, dtmf, dtmc = NA, rh = NA, pk = NA)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-vta.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert vector to array â€” .vta","title":"Convert vector to array â€” .vta","text":"Convert vector array","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-vta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert vector to array â€” .vta","text":"","code":".vta(v, r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-windcoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates wind shelter coefficient in specified direction â€” .windcoef","title":"Calculates wind shelter coefficient in specified direction â€” .windcoef","text":"Calculates wind shelter coefficient specified direction","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-windcoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates wind shelter coefficient in specified direction â€” .windcoef","text":"","code":".windcoef(dtm, direction, hgt = 1)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-windz.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates wind altitude coefficient in specified direction â€” .windz","title":"Calculates wind altitude coefficient in specified direction â€” .windz","text":"Calculates wind altitude coefficient specified direction","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dot-windz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates wind altitude coefficient in specified direction â€” .windz","text":"","code":".windz(dtm1, dtm2, dtmr, wdir)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_globalbedo.html","id":null,"dir":"Reference","previous_headings":"","what":"Download 1km albedo data â€” download_globalbedo","title":"Download 1km albedo data â€” download_globalbedo","text":"function download_globalbedo downloads monthly GlobAlbedo tiled albedo data Jasmin available years 1998-2011. Whole UK covered default tiles. information see: http://www.globalbedo.org/index.php","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_globalbedo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download 1km albedo data â€” download_globalbedo","text":"","code":"download_globalbedo(   dir_out,   tiles = c(\"h17v03\", \"h17v04\", \"h18v03\"),   months = c(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"),   years = seq(1998, 2011),   url = \"http://gws-access.jasmin.ac.uk\",   path = \"/public/qa4ecv/albedo/netcdf_cf/1km/monthly\" )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_globalbedo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download 1km albedo data â€” download_globalbedo","text":"dir_out directory save data tiles vector strings file name format 'h##v##'. Whole UK covered default tiles. year numeric vector indicating years data required month string vector  indicating month data required","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_globalbedo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download 1km albedo data â€” download_globalbedo","text":"username password currently required.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_hadukdaily.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloads 1km historic climata data for the UK â€” download_hadukdaily","title":"Downloads 1km historic climata data for the UK â€” download_hadukdaily","text":"function download_hadukdaily downloads HadUK-Grid Gridded Climate Observation data 1km grid UK CEDA.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_hadukdaily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloads 1km historic climata data for the UK â€” download_hadukdaily","text":"","code":"download_hadukdaily(dir_out, cedausr, cedapwd, year, month, varn)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_hadukdaily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloads 1km historic climata data for the UK â€” download_hadukdaily","text":"dir_out directory save data cedausr string ceda username cedapwd string ceda username year numeric value indicating year data required month numeric value (1-12) indicating month data required varn. Variable required. One rainfall (precipitation mm), tasmax (maximum daily temperature, deg C) tasmin (minimum daily temperature, deg C).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_hadukdaily.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downloads 1km historic climata data for the UK â€” download_hadukdaily","text":"obtain username password, first register https://services.ceda.ac.uk/. username given main CEDA account. FTP password separate password CEDA web account. already password, want reset FTP password go MyCEDA click 'Configure FTP account' button.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_ukcp18.html","id":null,"dir":"Reference","previous_headings":"","what":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","title":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","text":"Using parameters function downloaded ftp.ceda.ac.uk available UCKP18 files containing relevant data user defined output directory","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_ukcp18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","text":"","code":"download_ukcp18(   dir_out,   cedausr,   cedapwd,   startdate,   enddate,   collection = c(\"land-gcm\", \"land-rcm\"),   domain = c(\"uk\", \"eur\", \"global\"),   rcp = c(\"rcp85\", \"rcp26\"),   member = c(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",     \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\",     \"27\", \"28\"),   vars = c(\"clt\", \"hurs\", \"huss\", \"pr\", \"prsn\", \"psl\", \"rls\", \"rss\", \"snw\", \"tasmax\",     \"tasmin\", \"uas\", \"vas\"),   cedaprot = \"ftp://\",   cedaserv = \"ftp.ceda.ac.uk\" )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_ukcp18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","text":"dir_out Output directory files downloaded cedausr string ceda user name cedapwd string ceda user pasword startdate POSIXlt class defining start date required timeseries enddate POSIXlt class defining end date required timeseries collection text string defining UKCP18 collection, either 'land-gcm' 'land-rcm' domain text string defining UKCP18 domain, either 'uk' 'eur'(land-rcm collection ) 'global' rcp text string iof RCP scenario downloaded member vector strings defining climate model member downloaded. Available members vary UKCP18 collections. vars vector strings corresponding UKCP18 short variable names download cedaprot string ceda protocol set ftp CHANGE cedaserv string ceda server url CHANGE","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_ukcp18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","text":"downloads files dir_out","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_ukcp18.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","text":"obtain username password, first register https://services.ceda.ac.uk/. username given main CEDA account. FTP password separate password CEDA web account. already password, want reset FTP password go MyCEDA click 'Configure FTP account' button.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/download_ukcp18.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download UKCP18 climate data\r\nILya comment: function needs fixing to handle cases where length(member) or\r\nlength (collection) > 1 (or make clear you only want one at a time).\r\nNote that with collection='land-rcm', it can download 12 model runs numbered, 1 & 4-15.\r\nI.e. 2 & 3 don't exist â€” download_ukcp18","text":"","code":"dir_out <- tempdir() download_ukcp18(dir_out,'ceda_username','ceda_password',as.POSIXlt('2018-05-01'),as.POSIXlt('2018-05-31'),'land-rcm','uk','rcp85',c('01'),c('tasmax','tasmin')) #> [1] \"Parameters chosen:\" #> [1] \"land-rcm\" #> [1] \"uk\" #> [1] \"rcp85\" #> [1] \"01\" #> [1] \"tasmax\" \"tasmin\" #> [1] \"20101201-20201130\" #> [1] \"Downloading from /badc/ukcp18/data/land-rcm/uk/12km/rcp85\" #> [1] 1 #> [1] \"/badc/ukcp18/data/land-rcm/uk/12km/rcp85/01/tasmax/day/latest/tasmax_rcp85_land-rcm_uk_12km_01_day_20101201-20201130.nc\" #> Error in curl::curl_download(dload_url, destfile, handle = h, quiet = FALSE): Send failure: Connection was aborted"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmf.html","id":null,"dir":"Reference","previous_headings":"","what":"A 100m grid resolution digital elevation dataset â€” dtmf","title":"A 100m grid resolution digital elevation dataset â€” dtmf","text":"spatial dataset elevations (m) Lizard Peninsula, COrnwall, UK, covering area bounded 160000, 181400, 11300, 30000  (xmin, xmax, ymin, ymax) coordinate reference system OSGB36 / British National Grid (EPSG:27700)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 100m grid resolution digital elevation dataset â€” dtmf","text":"","code":"dtmf"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A 100m grid resolution digital elevation dataset â€” dtmf","text":"PackedSpatRaster object 197 rows 214 columns","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A 100m grid resolution digital elevation dataset â€” dtmf","text":"http://www.tellusgb.ac.uk/","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmm.html","id":null,"dir":"Reference","previous_headings":"","what":"A 1km grid resolution digital elevation dataset â€” dtmm","title":"A 1km grid resolution digital elevation dataset â€” dtmm","text":"spatial dataset elevations (m) West COrnwall, UK, covering area bounded 20000, 220000, -34000, 66000  (xmin, xmax, ymin, ymax) coordinate reference system OSGB36 / British National Grid (EPSG:27700)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 1km grid resolution digital elevation dataset â€” dtmm","text":"","code":"dtmm"},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A 1km grid resolution digital elevation dataset â€” dtmm","text":"PackedSpatRaster object 100 rows 100 columns","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/dtmm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A 1km grid resolution digital elevation dataset â€” dtmm","text":"http://www.tellusgb.ac.uk/","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5data.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of ERA5 climate data â€” era5data","title":"A list of ERA5 climate data â€” era5data","text":"list hourly ERA5 climata data May 2018 Cornwall, UK (lat, long boundary) returned era5toclimarray()","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of ERA5 climate data â€” era5data","text":"","code":"era5data"},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of ERA5 climate data â€” era5data","text":"list following elements: tme POSIXlt object dates times climarray list arrays climate variables following variables: dtmc wrapped SpatRast object elevations (m) matching extent resolution climate data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list of ERA5 climate data â€” era5data","text":"https://cds.climate.copernicus.eu//","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5sst.html","id":null,"dir":"Reference","previous_headings":"","what":"A 0.25 degree grid resolution dataset of sea-surface temperature data â€” era5sst","title":"A 0.25 degree grid resolution dataset of sea-surface temperature data â€” era5sst","text":"spatial dataset hourly sea-surface temperatures May 2018 sea around West Cornwall, UK, covering area bounded  -6.125, -4.125, 49.125, 51.125 (xmin, xmax, ymin, ymax) WGS84 lat long coordinate reference system (EPSG:4326)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5sst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 0.25 degree grid resolution dataset of sea-surface temperature data â€” era5sst","text":"","code":"era5sst"},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5sst.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A 0.25 degree grid resolution dataset of sea-surface temperature data â€” era5sst","text":"PackedSpatRaster object 8 rows, 8 columns 744 layers","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5sst.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A 0.25 degree grid resolution dataset of sea-surface temperature data â€” era5sst","text":"://cds.climate.copernicus.eu//","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5toclimarray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert era4 ncdf4 file to format required for model â€” era5toclimarray","text":"","code":"era5toclimarray(ncfile, dtm, dtr_cor_fac = 1.285)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5toclimarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert era4 ncdf4 file to format required for model â€” era5toclimarray","text":"ncfile character vector containing path filename nc file dtm SpatRaster object elevations covering extent study area (see details) dtr_cor_fac numeric value used diurnal temperature range correction coastal grid cells. Default = 1.285, based calibration UK Met Office observations. set zero, correction applied.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/era5toclimarray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert era4 ncdf4 file to format required for model â€” era5toclimarray","text":"list following: tme POSIXlt object times corresponding climate observations climarray list arrays hourly weather variables dtmca coarse resolution digital elevation dataset matching resolution input climate data, coordinate reference system extent matching dtm function era5toclimarray converts data netCDF4 file returned mcera5::request_era5() correct formal required subsequent modelling. model requires input climate data projected using coordinate reference system x y metres. Since values returned mcera5::request_era5() lat long, output data reprojected using coordinate reference system extent dtm (retain approximate original grid resolution input climate data). Returned climate data match resolution, corrdinate reference system extent dtmc.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/fill_calendar_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts 360-day yearly timeseries of UKCP18 raster data to actual calendar data â€” fill_calendar_data","title":"Converts 360-day yearly timeseries of UKCP18 raster data to actual calendar data â€” fill_calendar_data","text":"Reassigns data interpolates missing days UKCP18 (360 day years) SpatRast data create new set rasters corresponding actual calendar dates.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/fill_calendar_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts 360-day yearly timeseries of UKCP18 raster data to actual calendar data â€” fill_calendar_data","text":"","code":"fill_calendar_data(   ukcp_r,   real_dates,   testplot = FALSE,   plotdays = c(89:91, 242:244) )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/fill_calendar_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts 360-day yearly timeseries of UKCP18 raster data to actual calendar data â€” fill_calendar_data","text":"ukcp_r SpatRaster timeseries stack loaded UKCP18 .ncdf file real_dates vector valid date strings, output correct_ukcp_dates() corresponding time period 'ukcp_r' testplot logical TRUE plots example data missing interpolated days plotdays example days years plot CHANGE","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/fill_calendar_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts 360-day yearly timeseries of UKCP18 raster data to actual calendar data â€” fill_calendar_data","text":"SpatRaster timeseries corresponding actual calendar dates invalid, missing/empty days","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/find_ukcp_decade.html","id":null,"dir":"Reference","previous_headings":"","what":"Find UKCP18 decades containing timeseries of data â€” find_ukcp_decade","title":"Find UKCP18 decades containing timeseries of data â€” find_ukcp_decade","text":"Returns UKCP18 decade text (used file names) containing required data defined start end dates","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/find_ukcp_decade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find UKCP18 decades containing timeseries of data â€” find_ukcp_decade","text":"","code":"find_ukcp_decade(collection = c(\"land-gcm\", \"land-rcm\"), startdate, enddate)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/find_ukcp_decade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find UKCP18 decades containing timeseries of data â€” find_ukcp_decade","text":"collection UKCP18 collection, either global ('land-gcm') regional ('land-rcm'), file naming conventions vary collection startdate POSIXlt class defining starting date enddate POSIXlt class defining starting date","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/find_ukcp_decade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find UKCP18 decades containing timeseries of data â€” find_ukcp_decade","text":"vector strings corresponding decade part UKCP18 files containing entire requested timeseries","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/find_ukcp_decade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find UKCP18 decades containing timeseries of data â€” find_ukcp_decade","text":"","code":"find_ukcp_decade('land-rcm',as.POSIXlt(\"2030/01/01\"),as.POSIXlt(\"2039/12/31\")) #> [1] \"20201201-20301130\" \"20301201-20401130\""},{"path":"https://jrmosedale.github.io/mesoclim/reference/flowacc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates accumulated flow â€” flowacc","title":"Calculates accumulated flow â€” flowacc","text":"flowacc calculates accumulated flow(used model cold air drainage)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/flowacc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates accumulated flow â€” flowacc","text":"","code":"flowacc(dtm, basins = NA)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/flowacc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates accumulated flow â€” flowacc","text":"dtm SpatRast elevations (m). basins optionally SpatRast basins numbered integers (see details).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/flowacc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates accumulated flow â€” flowacc","text":"SpatRast accumulated flow (number cells)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/flowacc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates accumulated flow â€” flowacc","text":"Accumulated flow expressed terms number cells. basins provided, accumulated flow cell within basin can occur cells within basin.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/flowacc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates accumulated flow â€” flowacc","text":"","code":"library(terra) fa <- flowacc(rast(dtmf)) plot(fa, main = 'Accumulated flow')"},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"terra version of microclima get_dem\r\nrequire(elevatr) â€” get_dem","title":"terra version of microclima get_dem\r\nrequire(elevatr) â€” get_dem","text":"terra version microclima get_dem require(elevatr)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terra version of microclima get_dem\r\nrequire(elevatr) â€” get_dem","text":"","code":"get_dem(r, zeroasna = TRUE)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_ukcp18_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets dates of UKCP18 ncdf file â€” get_ukcp18_dates","title":"Gets dates of UKCP18 ncdf file â€” get_ukcp18_dates","text":"function era5toclimarray converts data netCDF4 file returned mcera5::request_era5() correct formal required subsequent modelling.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_ukcp18_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets dates of UKCP18 ncdf file â€” get_ukcp18_dates","text":"","code":"get_ukcp18_dates(ncfile)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_ukcp18_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets dates of UKCP18 ncdf file â€” get_ukcp18_dates","text":"ncfile filename UKCP18 ncdf data file","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_ukcp18_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets dates of UKCP18 ncdf file â€” get_ukcp18_dates","text":"vector date strings form 'yyy-dd-mm'","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/get_ukcp18_dates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets dates of UKCP18 ncdf file â€” get_ukcp18_dates","text":"Creates time series ncdf file time variable correctly read R terra package. UKCP18 time values expressed hours since 1/1/1970 12.00. Output used function correct_ukcp_dates()","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/hourlytemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Derives hourly temperature from daily data â€” hourlytemp","title":"Derives hourly temperature from daily data â€” hourlytemp","text":"Generates plausible vector SpatRaster hourly temperatures daily data.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/hourlytemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derives hourly temperature from daily data â€” hourlytemp","text":"","code":"hourlytemp(tmn, tmx, tme = NA, lat = NA, long = NA, srte = 0.09)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/hourlytemp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derives hourly temperature from daily data â€” hourlytemp","text":"tmn vector SpatRaster daily minimum temperatures (deg C) tmx vector SpatRaster daily maximum temperatures (deg C) tme POSIXlt object dates. required tmn tmx vectors. lat latitude location (decimal degrees). required tmn tmx vectors srte parameter controlling speed decay night time temperatures (see details) lon longitude location (decimal degrees). required tmn tmx vectors","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/hourlytemp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derives hourly temperature from daily data â€” hourlytemp","text":"Daytime temperatures assumed follow sine curve peak short solar noon. dusk, temperatures assumed decay exponentially reaching minimum dawn. day tmx tmn fall assumed match UTC days. parameter stre controls speed decay night time temperatures time. value zero ensures values drop minimum dawn following day, trial error indicates circumstances temperatures decay faster . default value 0.09 optimal value derived using ERA5 data western Europe, performs reasonably well globally","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/invls_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"This function returns a numeric matrix identifying\r\nmatching values from a raster that intersect with\r\na set of points â€” invls_calc","title":"This function returns a numeric matrix identifying\r\nmatching values from a raster that intersect with\r\na set of points â€” invls_calc","text":"function returns numeric matrix identifying matching values raster intersect set points","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/invls_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function returns a numeric matrix identifying\r\nmatching values from a raster that intersect with\r\na set of points â€” invls_calc","text":"","code":"invls_calc(   lsm,   resolution,   xmin,   ymax,   s,   direction,   slr,   slr_xmin,   slr_xmax,   slr_ymin,   slr_ymax )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/landsea.html","id":null,"dir":"Reference","previous_headings":"","what":"A 100m grid resolution landsea mask â€” landsea","title":"A 100m grid resolution landsea mask â€” landsea","text":"spatial landsea mask West Cornwall, UK, covering area bounded  145000, 195000, -9000, 41000 (xmin, xmax, ymin, ymax) coordinate reference system OSGB36 / British National Grid (EPSG:27700)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/landsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 100m grid resolution landsea mask â€” landsea","text":"","code":"landsea"},{"path":"https://jrmosedale.github.io/mesoclim/reference/landsea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A 100m grid resolution landsea mask â€” landsea","text":"PackedSpatRaster object 500 rows 500 columns","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/landsea.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A 100m grid resolution landsea mask â€” landsea","text":"https://cds.climate.copernicus.eu//","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/lapserate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Lapse rates\r\nea = temperature (deg C)\r\nea = vapour pressure (kPa)\r\npk = atmospheric pressure (kPa) â€” lapserate","title":"Calculate Lapse rates\r\nea = temperature (deg C)\r\nea = vapour pressure (kPa)\r\npk = atmospheric pressure (kPa) â€” lapserate","text":"Calculate Lapse rates ea = temperature (deg C) ea = vapour pressure (kPa) pk = atmospheric pressure (kPa)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/lapserate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Lapse rates\r\nea = temperature (deg C)\r\nea = vapour pressure (kPa)\r\npk = atmospheric pressure (kPa) â€” lapserate","text":"","code":"lapserate(tc, ea, pk)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_q_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots chosen layers from raster stack corresponding to selected quantiles of spatial mean â€” plot_q_layers","title":"Plots chosen layers from raster stack corresponding to selected quantiles of spatial mean â€” plot_q_layers","text":"Plots chosen layers raster stack corresponding selected quantiles spatial mean","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_q_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots chosen layers from raster stack corresponding to selected quantiles of spatial mean â€” plot_q_layers","text":"","code":"plot_q_layers(r, p = c(0, 0.5, 1), fun = \"mean\", common_scale = FALSE)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_q_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots chosen layers from raster stack corresponding to selected quantiles of spatial mean â€” plot_q_layers","text":"r Spatraster stack (time name values used plot titles) p vector quantile probabilities plot (0:1) fun = mean spatial function used summaries layers quantiles dtermined","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_q_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots chosen layers from raster stack corresponding to selected quantiles of spatial mean â€” plot_q_layers","text":"plots series raster plots equal length p","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_timestats_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot timeseries plots of spatial mean, min and max values by various timesteps â€” plot_timestats_r","title":"Plot timeseries plots of spatial mean, min and max values by various timesteps â€” plot_timestats_r","text":"Plot timeseries plots spatial mean, min max values various timesteps","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_timestats_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot timeseries plots of spatial mean, min and max values by various timesteps â€” plot_timestats_r","text":"","code":"plot_timestats_r(   r,   var,   idx = c(\"years\", \"months\", \"week\", \"doy\", \"yearmonths\", \"yearweeks\", \"7days\", \"hour\"),   lgd = FALSE )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_timestats_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot timeseries plots of spatial mean, min and max values by various timesteps â€” plot_timestats_r","text":"r stack spatrasters time values var variable name used plot titles idx time index indicating whether summary plots year, month, week, day year etc lgd whether include legend","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_timestats_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot timeseries plots of spatial mean, min and max values by various timesteps â€” plot_timestats_r","text":"NA plots series timeploat","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_timestats_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot timeseries plots of spatial mean, min and max values by various timesteps â€” plot_timestats_r","text":"","code":"plot_timestats_r(ukcp18rcm$climarray$tmax,'tmax',idx='doy',lgd=FALSE) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'global': unable to find an inherited method for function 'tapp' for signature '\"array\"'"},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_wind.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 'star' or 'radar' chart of wind cardinal directions â€” plot_wind","title":"Plot 'star' or 'radar' chart of wind cardinal directions â€” plot_wind","text":"Plot 'star' 'radar' chart wind cardinal directions","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_wind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 'star' or 'radar' chart of wind cardinal directions â€” plot_wind","text":"","code":"plot_wind(winddir, windspeed)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_wind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 'star' or 'radar' chart of wind cardinal directions â€” plot_wind","text":"winddir wind direction 3D Spatraster windspeed windspeed 3D Spatraster geometry winddir]","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/plot_wind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot 'star' or 'radar' chart of wind cardinal directions â€” plot_wind","text":"plots star charts showing frequency wind directions average maximum windspeeds direction","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies bias correction to precipitation data â€” precipcorrect","title":"Applies bias correction to precipitation data â€” precipcorrect","text":"function precipcorrect applies bias correction spatial climate dataset","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies bias correction to precipitation data â€” precipcorrect","text":"","code":"precipcorrect(hist_obs, hist_mod, fut_mod, mod_out = FALSE, rangelim = NA)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies bias correction to precipitation data â€” precipcorrect","text":"hist_obs stacked SpatRast precipitation data. hist_mod stacked SpatRast modelled precipitation data period spatial area hist_obs. Reprojected resampled match hist_obs necessary. fut_mod stacked SpatRast modelled precipitation data e.g. future period corrections applied. eprojected resampled match hist_obs necessary. mod_out optional logical indicating whether return model correction coefficients, can applied datasets multiple time periods using precipcorrect_apply(). rangelim fractional amount maximum values precipitation hist_obs given cell values returned dataset can attain. .e. set 2, values given grid cell returned dataset exceed twice maximum amount corresponding grid cell hist_obs.supplied (default), returned values unbounded.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies bias correction to precipitation data â€” precipcorrect","text":"mod_out = FALSE (default), SpatRaster bias corrected precipitation. mod_out = TRUE list containing two wrapped SpatRasters representing amount adjust precipitation totals precipitation day fractions.","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies bias correction model to precipitation data â€” precipcorrect_apply","title":"Applies bias correction model to precipitation data â€” precipcorrect_apply","text":"function precipcorrect_apply applies set bias corrections derived using precip_correct spatial climate dataset","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies bias correction model to precipitation data â€” precipcorrect_apply","text":"","code":"precipcorrect_apply(fut_mod, biasmods)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies bias correction model to precipitation data â€” precipcorrect_apply","text":"fut_mod stacked SpatRast modelled precipitation data e.g. future period corrections applied. reprojected resampled match data held mod_out necessary. list containing two wrapped SpatRasters derived using precipcorrect() representing amount adjust rainfall totals rainfall days, used basis adjusting individual rainfall events. `","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect_apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies bias correction model to precipitation data â€” precipcorrect_apply","text":"SpatRaster matching fut_mod climate data bias corrected.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipcorrect_apply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Applies bias correction model to precipitation data â€” precipcorrect_apply","text":"precipcorrect_apply function allows bias correction applied multiple datasets, spanning e.g. several future time periods climate scenarious. spatial extent fut_mod must least partially overlap hist_obs running precipcorrect corrected values returned overlapping area","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipdownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale precipitation accounting for elevation effects â€” precipdownscale","title":"Downscale precipitation accounting for elevation effects â€” precipdownscale","text":"function precipdownscale used spatially downscale precipitation, performing adjustments elevation using one two methods","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipdownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale precipitation accounting for elevation effects â€” precipdownscale","text":"","code":"precipdownscale(   prec,   dtmf,   dtmc,   method = \"Tps\",   fast = TRUE,   noraincut = 0,   patchsim = FALSE,   nsim = dim(prec)[3] )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipdownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale precipitation accounting for elevation effects â€” precipdownscale","text":"prec coarse-resolution array precipitation (mm) dtmf high-resolution SpatRast elevations dtmc coarse-resolution SpatRast elevations matching resolution, extent coordinate reference system prec. method One Tps Elev (see details). fast optional logical indicating whether faster less accurate Thin-plate spline downscaling. Ignored method = \"Elev\" noraincut optional single numeric value indicating rainfall amounts considered rain (see details). patchsim optional logical indicating whether simulate rain patchiness downscaling. realistically captures intensity, slower. nsim optionally number independent rain patchiness simulations perform. Outputs temporally interpolated (see details).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipdownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale precipitation accounting for elevation effects â€” precipdownscale","text":"stacked SpatRast precipitation values matching resolution, coordinate reference system extent dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/precipdownscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downscale precipitation accounting for elevation effects â€” precipdownscale","text":"Precipitation downscaled computing total rainfall amount fraction rain days adjusting variables account elevation using either Thin-plate-spine model (method = \"Tps\") performing empirical adjustment calibrated UK precipitation data (method = \"Elev\"). method set Tps users option specify whether perform fast, slightly less accurate Thin-plate spline using fields::fastTps() instead fields::Tps(). One totals derived, precipitation day adjusted ensure total amount number precipitation days match expected small amount precipitation precipitation days wettest regionally, setting precipitation days little rain zero required. accommodate precipitation datasets erroneously include small amounts precipitation (<0.01 mm/day) precipitation days, users option set cut-via noraincut. patchsim set TRUE rainfall patchiness caused e.g. localized rain showed simulated gstats package. parameter nsim determines number independent simulations hence time intervals simulations performed. Simulated anomalies due local precipitation events interpolated temporally periods. ensures , shorter increments say hour, location magnitude local precipitation events within hour retain degree inter-dependence realistically simulating trajectory low pressure systems.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/presdownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale pressure with elevation effects â€” presdownscale","title":"Downscale pressure with elevation effects â€” presdownscale","text":"Downscales array pressure data applying elevation effects","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/presdownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale pressure with elevation effects â€” presdownscale","text":"","code":"presdownscale(pk, dtmf, dtmc, sealevel = TRUE)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/presdownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale pressure with elevation effects â€” presdownscale","text":"pk SpatRast array atmospheric pressures (kPa). array dtmc must provided. dtmf fine-resolution SpatRast elevations. Temperatures -scaled resolution dtmf. dtmc optional SpatRast elevations matching resolution pk. supplied, pk must SpatRast dtmc derived resampling dtmf resolution pk extents must match. sealevel optional logical indicating whether pk pressure sea-level","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/presdownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale pressure with elevation effects â€” presdownscale","text":"multi-layer SpatRast elevation-corrected pressures (kPa) matching resolution dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/presdownscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downscale pressure with elevation effects â€” presdownscale","text":"","code":"pk <- presdownscale(era5data$climarray$pres, rast(dtmf), rast(era5data$dtmc)) plot(pk[[1]])"},{"path":"https://jrmosedale.github.io/mesoclim/reference/read_climdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read climate data â€” read_climdata","title":"Read climate data â€” read_climdata","text":"Reads climate dataset output example ukcp18toclimdata() written write_climdata() Unwraps PackedSpatRasters Spatrasters","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/read_climdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read climate data â€” read_climdata","text":"","code":"read_climdata(filepath)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/read_climdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read climate data â€” read_climdata","text":"filepath","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/read_climdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read climate data â€” read_climdata","text":"R list climate data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/read_climdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read climate data â€” read_climdata","text":"","code":"climdata<-read_climdata(system.file('data/ukcp18rcm.rda',package='mesoclim')) #> Error in base::readRDS(file = file, refhook = refhook): unknown input format"},{"path":"https://jrmosedale.github.io/mesoclim/reference/relhumdownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale relative humidity accounting for downscaled temperature â€” relhumdownscale","title":"Downscale relative humidity accounting for downscaled temperature â€” relhumdownscale","text":"function relhumdownscale used spatially downscale relative","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/relhumdownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale relative humidity accounting for downscaled temperature â€” relhumdownscale","text":"","code":"relhumdownscale(rh, tcc, tcf, dtmc, rhmin = 0)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/relhumdownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale relative humidity accounting for downscaled temperature â€” relhumdownscale","text":"rh coarse-resolution array relative humidities (percentage) tcc coarse-resolution array wind temperatures (deg C) tcf fine-resolution SpatRast temperatures (deg C) returned tempdownscale() dtmc coarse-resolution SpatRast elevations matching resolution, extent coordinate reference system rh tc. rhmin optional single numeric value indicating minimum realistically attainable relative humidity within study region (percentage).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/relhumdownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale relative humidity accounting for downscaled temperature â€” relhumdownscale","text":"stacked SpatRast relative humidities (percentage) matching resolution, coordinate reference system extent tcf.","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatialdownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatially downscale all climate variables â€” spatialdownscale","title":"Spatially downscale all climate variables â€” spatialdownscale","text":"Spatially downscales coarse-resolution climate data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatialdownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatially downscale all climate variables â€” spatialdownscale","text":"","code":"spatialdownscale(   climdata,   SST,   dtmf,   dtmm = NA,   basins = NA,   cad = TRUE,   coastal = TRUE,   refhgt = 2,   uhgt = 2,   rhmin = 20,   pksealevel = TRUE,   patchsim = TRUE,   terrainshade = TRUE,   precipmethod = \"Elev\",   fast = TRUE,   noraincut = 0 )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatialdownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatially downscale all climate variables â€” spatialdownscale","text":"climdata climdata model object containing climate data format era5climdata SST coarse resolution SpatRast sea-surface temperature data (deg C) without NAs time(SST) == climdata$tme dtmf high-resolution SpatRast elevations dtmm medium-resolution SpatRast elevations covering larger area dtmf (needed coastal effects - see details tempdownscale()). basins optionally, fine-resolution SpatRast basins returned basindelin() matching coordinate reference system extent dtmf. Calculated supplied. cad optional logical indicating whether calculate cold-air drainage effects coastal optional logical indicating whether calculate coastal effects refhgt height ground temperature measurements climdata. uhgt height gorund wind speed measurements climdata resolution dtmf. rhmin minimum relative humidity (set avoid relative humidity dropping low -scaling). Default 20 (percent). pksealevel optional logical indicating whether input pressure data represent sea-level pressure (default TRUE). terrainshade optional logical indicating whether account terrain shading shortwave radiation downscale. precipmethod One Tps Elev indicating whether account elevation effects using Thin-plate spline model en emprical adjustment (see details precipdownscale()) fast optional logical indicating whether use fast Thin-plate spline -scaling (see details precipdownscale()). noraincut numeric value low precipitation amounts set zero (see details precipdownscale()). pathsim optional logical indicating whether simulate cloud cover rainfall patchiness see details swdownscale() precipdownscale(). difr optional logical indicating whether return diffuse radiation ( default TRUE).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatialdownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatially downscale all climate variables â€” spatialdownscale","text":"list multi-layer SpatRast downscaled climate variables follows: temp Temperature (deg C) relhum Relative humidity (Percentage) pres Sea-level atmospheric pressure (kPa) swrad Total downward shortwave radiation (W/m^2) difrad Downward diffuse radiation (W / m^2) lwrad Total downward longwave radiation (W/m^2) windspeed 2m (m/s)  winddir Wind direction (decimal degrees) prec Precipitation (mm) input data hourly temp replaced tmax tmin representing daily maximum minimum values. variable difrad returned unless terrainshade = TRUE.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatial_interpNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatially interpolate missing values in Spatraster â€” spatial_interpNA","title":"Spatially interpolate missing values in Spatraster â€” spatial_interpNA","text":"Spatially interpolate missing values Spatraster","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatial_interpNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatially interpolate missing values in Spatraster â€” spatial_interpNA","text":"","code":"spatial_interpNA(r)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatial_interpNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatially interpolate missing values in Spatraster â€” spatial_interpNA","text":"r 2 3D Spatraster","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatial_interpNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatially interpolate missing values in Spatraster â€” spatial_interpNA","text":"Spatraster dim r without NA","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/spatial_interpNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatially interpolate missing values in Spatraster â€” spatial_interpNA","text":"","code":"r <- rast(ncols=5, nrows=5, vals=rep(c(1,2,NA,4,5),5)) rout<-spatial_interpNA(r) plot(c(r,rout))"},{"path":"https://jrmosedale.github.io/mesoclim/reference/SSTinterpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"temporally interpolate sea-surface temperature data to hourly â€” SSTinterpolate","title":"temporally interpolate sea-surface temperature data to hourly â€” SSTinterpolate","text":"function SSTinterpolate spatially infills missing spatial spatial sea-surface temperature data temporally interpolates data hourly already hourly.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/SSTinterpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"temporally interpolate sea-surface temperature data to hourly â€” SSTinterpolate","text":"","code":"SSTinterpolate(SST, tmein, tmeout)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/SSTinterpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"temporally interpolate sea-surface temperature data to hourly â€” SSTinterpolate","text":"SST SpatRast hourly, daily e.g. monthly sea-surface tmeperature data tmein POSIXlt object times corresponding layer SST tmeout POSIXlt object times output sea-surface temperature data needed (hourly)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/SSTinterpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"temporally interpolate sea-surface temperature data to hourly â€” SSTinterpolate","text":"SpatRast sea-surface temperature data wiht units SST (usually deg C).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/SSTinterpolate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"temporally interpolate sea-surface temperature data to hourly â€” SSTinterpolate","text":"Missing grid cells interpolated using zoo::na.approx. Output sea-surface temperature data temporally interpolated daily values, duration tmeout must least tmeout. Hourly values returned replicating values within day sea-surface temperatures tend fluctuate slowly.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"subdailyrain estimate sub-daily rainfall using Bartlett-Lewis rectangular pulse rainfall model.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"","code":"subdailyrain(   rain,   BLest,   dailyvals = 24,   dlim = 0.2,   maxiter = 1000,   splitthreshold = 0.2,   trace = TRUE )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"rain vector time-series rainfall dailyvals number rainfall values required day (.e. 24 hourly). BLpar data.frame Bartlett-Lewis parameters returned findBLpar().","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"matrix length(rain) rows dailyvals columns sub-daily rainfall.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"function based Bartlett-Lewis Rectangular Pulse model described Rodriguez-Iturbe (1987 & 1988). model six parameters (see findBLpar()) characterized particular form clustering process cluster rainfall events (hereafter storms) consists one rainfall cells generated start process. parameters BLpar governs frequency storms, start end rainfall events associated storms, intensity rainfall associated storms variation duration storms, can used generate data time-interval. Since vary seasonally, month, wise generate sb-daily data seperately month using different parameter estimates. Singificant element sof coding borrowed HyetosMinute package, library must loaded attached, .e. `library(HyetosMinute)' function calls C++ code included package. package available CRAN must obtained installed directly : http://www.itia.ntua.gr/en/softinfo/3/.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"Rodriguez-Iturbe , Cox DR & Isham V (1987) models rainfall based stochastic point processes. Proc. R. Soc. Lond., 410: 269-288. Rodriguez-Iturbe , Cox DR & Isham V (1988) point process model rainfall: developments. Proc. R. Soc. Lond., 417: 283-298.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/subdailyrain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate sub-daily rainfall from daily rainfall â€” subdailyrain","text":"","code":"# =========================================== # # ~~~ Generate hourly data for March 2015 ~~~ # # =========================================== # # ~~~~ Get paramaters for March tme <- as.POSIXlt(dailyrain$obs_time) #> Error in eval(expr, envir, enclos): object 'dailyrain' not found marchrain <- dailyrain$precipitation[which(tme$mon + 1 == 3)] #> Error in eval(expr, envir, enclos): object 'dailyrain' not found BLpar <- findBLpar(marchrain) # Takes ~ 30 seconds #> Error in findBLpar(marchrain): could not find function \"findBLpar\" # ~~~~ Generate hourly data for March 2015 sel <- which(tme$mon + 1 == 3 & tme$year + 1900 == 2015) #> Error in eval(expr, envir, enclos): object 'tme' not found march2015 <- dailyrain$precipitation[sel] #> Error in eval(expr, envir, enclos): object 'dailyrain' not found hourly <- subdailyrain(march2015, BLpar) #> Error in eval(expr, envir, enclos): object 'march2015' not found # ~~~~ Plots comparing hourly and daily / 24 data o <- as.vector(t(matrix(rep(c(1:31), 24), nrow = 31, ncol = 24))) marchhfd <- march2015[o] / 24 #> Error in eval(expr, envir, enclos): object 'march2015' not found hourlyv <-as.vector(t(hourly)) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 't': object 'hourly' not found dd <- c(1:(31 * 24)) / 24 plot(hourlyv ~ dd, type = \"l\", ylim = c(0, max(hourlyv)),      xlab = \"Decimal day\", ylab = \"Rain (mm / hr)\", col = \"red\") #> Error in FUN(X[[i]], ...): object 'hourlyv' not found par(new = T) #> Warning: calling par(new=TRUE) with no plot plot(marchhfd ~ dd, type = \"l\", ylim = c(0, max(hourlyv)),      xlab = \"\", ylab = \"\", col = \"blue\", lwd = 2) #> Error in FUN(X[[i]], ...): object 'hourlyv' not found"},{"path":"https://jrmosedale.github.io/mesoclim/reference/swraddownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale shortwave radiation â€” swdownscale","title":"Downscale shortwave radiation â€” swdownscale","text":"Downscales array shortwave radiation data option simulate cloud patchiness calculate diffuse radiation","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/swraddownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale shortwave radiation â€” swdownscale","text":"","code":"swdownscale(   swrad,   tme,   dtmf,   dtmc,   patchsim = FALSE,   nsim = dim(swrad)[3],   terrainshade = FALSE )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/swraddownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale shortwave radiation â€” swdownscale","text":"swrad array shortwave radiation (W/m^2). tme POSIXlt object times corresponding radiation values swrad. dtmf fine-resolution SpatRast elevations. Temperatures -scaled resolution dtmf. dtmc SpatRast elevations matching resolution, extend coordinate reference system swrad. patchsim optional logical indicating whether simulate cloud cover patchiness downscaling. realistically captures variation, slower. nsim optionally number independent cloud cover patchiness simulations perform. Outputs temporally interpolated (see details). terrainshade optional logical indicating whether adjust incoming radiation terrain shading. TRUE, total downward shortwave radiation partioned direct diffuse components, latter adjusted sky view former set zero sun horizon, computed explicitly.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/swraddownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale shortwave radiation â€” swdownscale","text":"terrainshade = FALSE multi-layer SpatRast shortwave radiation (W/m^2) matching resolution dtmf. terrainshade = TRUE list wrapped multi-layer SpatRasts (1) shortwave radiation (W/m^2) (2) diffuse fraction (range 0-1).","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/swraddownscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downscale shortwave radiation â€” swdownscale","text":"radiation downscaled computing average fraction clear-sky radiation adjusting variable account elevation using emprical adjustment calibrated 0.05 degree data UK. patchsim set TRUE cloud cover patchiness simulated gstats package. parameter nsim determines number independent simulations hence time intervals simulations performed. Simulated anomalies due local cloud patchiness interpolated temporally periods. ensures , shorter increments say hour, location clouds within hour retain degree inter-dependence realistically simulating trajectory cloud move across landscape.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/swraddownscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downscale shortwave radiation â€” swdownscale","text":"","code":"# Extract model inputs form inbuilt datasets swrad <- mesoclim::era5data$climarray$swrad tme <- as.POSIXlt(era5data$tme, tz = \"UTC\") dtmc <- rast(mesoclim::era5data$dtmc) dtmf <- rast(mesoclim::dtmf) # Run with default options swradf<-swdownscale(swrad, tme, dtmf, dtmc) # plot output plot(swradf[[13]], main = as.character(tme)[13])"},{"path":"https://jrmosedale.github.io/mesoclim/reference/tempdownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale temperature â€” tempdownscale","title":"Downscale temperature â€” tempdownscale","text":"Downscales coarse-resolution temperature data accounting elevation effects optionally cold air drainage coastal effects","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/tempdownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale temperature â€” tempdownscale","text":"","code":"tempdownscale(   climdata,   SST,   dtmf,   dtmm = NA,   basins = NA,   u2 = NA,   cad = TRUE,   coastal = TRUE,   refhgt = 2,   uhgt = 2 )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/tempdownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale temperature â€” tempdownscale","text":"climdata climdata model object containing climate data format era5climdata SST coarse resolution SpatRast hourly sea-surface temperature data (deg C) NAs, returned SSTinterpolate() dtmf high-resolution SpatRast elevations dtmm medium-resolution SpatRast elevations covering larger area dtmf (needed coastal effects - see details). basins optionally, fine-resolution SpatRast basins returned basindelin() matching coordinate reference system extent dtmf. Calculated supplied. u2 optionally, SpatRast high resolution wind speeds returned windownscale(). Calculated supplied. cad optional logical indicating whether calculate cold-air drainage effects coastal optional logical indicating whether calculate coastal effects refhgt height ground temperature measurements climdata. uhgt height gorund wind speed measurements climdata resolution dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/tempdownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale temperature â€” tempdownscale","text":"multi-layer SpatRast downscaled temperatures (deg C) matching resolution dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/tempdownscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downscale temperature â€” tempdownscale","text":"Cold air drainage calculated delineating hydrological basins calculating flow accumulation elevation difference highest point basin. Cold-air drainage assumed occur atmospheric stability high, namely radiation balance negative wind speeds low. Coastal effects calculated determining ratio land sea pixels upwind direction. provision dtmm allows ratio derived accoutning land sea outside boundaries study area.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/tempdownscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downscale temperature â€” tempdownscale","text":"","code":"# Takes ~90 seconds to run tmf <- tempdownscale(era5data, rast(era5sst), rast(dtmf), rast(dtmm)) plot(tmf[[5]]) # Coldest temperature"},{"path":"https://jrmosedale.github.io/mesoclim/reference/time_interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal interpolation of missing times in Spatraster\r\nWorks for any time step not just daily or hourly eg monthly SST â€” time_interp","title":"Temporal interpolation of missing times in Spatraster\r\nWorks for any time step not just daily or hourly eg monthly SST â€” time_interp","text":"Temporal interpolation missing times Spatraster Works time step just daily hourly eg monthly SST","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/time_interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal interpolation of missing times in Spatraster\r\nWorks for any time step not just daily or hourly eg monthly SST â€” time_interp","text":"","code":"time_interp(rin, tmeout, tmein = NA)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/time_interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal interpolation of missing times in Spatraster\r\nWorks for any time step not just daily or hourly eg monthly SST â€” time_interp","text":"rin = 3D Spatraster tmeout = Date POSIX vector datetimes required tmein = Date POSIX vector datetimes rin - NA assumes time(rin) provides valules","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/time_interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal interpolation of missing times in Spatraster\r\nWorks for any time step not just daily or hourly eg monthly SST â€” time_interp","text":"Spatraster stack nlyrs=length(tmeout)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/time_interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal interpolation of missing times in Spatraster\r\nWorks for any time step not just daily or hourly eg monthly SST â€” time_interp","text":"","code":"r <- rast(ncols=5, nrows=5, vals=rep(1,25)) rin<-c(r,r*2,r*3,r*4,r*5) tmein<-as.Date(seq(17532,17652,30)) terra::time(rin)<-tmein tmeout<-as.Date(seq(17532,17651,1)) rout<-time_interp(rin,tmeout, NA) plot(rout[[c(1,15,31,95,119,120)]])"},{"path":"https://jrmosedale.github.io/mesoclim/reference/Tpsdownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs thin-plate spline downscaling â€” Tpsdownscale","title":"Performs thin-plate spline downscaling â€” Tpsdownscale","text":"function Tpsdownscale thin plate spline model, typically elevation covariate downscale data.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/Tpsdownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs thin-plate spline downscaling â€” Tpsdownscale","text":"","code":"Tpsdownscale(r, dtmc, dtmf, method = \"normal\", fast = TRUE)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/Tpsdownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs thin-plate spline downscaling â€” Tpsdownscale","text":"r single layer SpatRast dataset downscaled. dtmc coarse resolution SpatRast elevations matching resolution, coordinate reference system extent r. dtmf fine-resolution SpatRast elevations. method one normal, log logit (see details) fast optional logical indicating whether use fields::fastTps() (faster less accurate)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/Tpsdownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs thin-plate spline downscaling â€” Tpsdownscale","text":"SpatRast r downscaled match dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/Tpsdownscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Performs thin-plate spline downscaling â€” Tpsdownscale","text":"method = \"log\" data log-transformed prior performing downscale, back-transformed. Use method input output data must always non-negative. method = \"logit\" data logit-transformed prior performing downscale, back-transformed. Use method input output data must always bounded 0 1. instances, spacial case input data 0 1 handled. method = \"normal\" transformation applied.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18aus.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of ~60km resolution UKCP18 global climate data (global domain) â€” ukcp18aus","title":"A list of ~60km resolution UKCP18 global climate data (global domain) â€” ukcp18aus","text":"list hourly UKCP18 regional climata data May 2018 East Australia UK returned ukcp18toclimarray  collection='land-gcm'& domain='global'. Lon res = 0.833 deg; Lat res = 0.55 deg","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18aus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of ~60km resolution UKCP18 global climate data (global domain) â€” ukcp18aus","text":"","code":"ukcp18aus"},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18aus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of ~60km resolution UKCP18 global climate data (global domain) â€” ukcp18aus","text":"list following elements: tme POSIXlt object dates times climarray list arrays climate variables following variables: windheight_m numeric value metres wind height ground tempheight_m numeric value metres temperature height ground dtmc wrapped SpatRast object elevations (m) matching extent resolution climate data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18aus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list of ~60km resolution UKCP18 global climate data (global domain) â€” ukcp18aus","text":"ftp.ceda.ac.uk","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18gcm.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of 60km resolution UKCP18 global climate data (UK domain) â€” ukcp18gcm","title":"A list of 60km resolution UKCP18 global climate data (UK domain) â€” ukcp18gcm","text":"list hourly UKCP18 regional climata data May 2018 Southwest UK returned ukcp18toclimarray  collection='land-gcm'& domain='uk'","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18gcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of 60km resolution UKCP18 global climate data (UK domain) â€” ukcp18gcm","text":"","code":"ukcp18gcm"},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18gcm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of 60km resolution UKCP18 global climate data (UK domain) â€” ukcp18gcm","text":"list following elements: tme POSIXlt object dates times climarray list arrays climate variables following variables: windheight_m numeric value metres wind height ground tempheight_m numeric value metres temperature height ground dtmc wrapped SpatRast object elevations (m) matching extent resolution climate data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18gcm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list of 60km resolution UKCP18 global climate data (UK domain) â€” ukcp18gcm","text":"ftp.ceda.ac.uk","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"A model member lookup table for different UKCP18 collections â€” ukcp18lookup","title":"A model member lookup table for different UKCP18 collections â€” ukcp18lookup","text":"Matches member number model name collections domains avaiolble","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A model member lookup table for different UKCP18 collections â€” ukcp18lookup","text":"","code":"ukcp18lookup"},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18lookup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A model member lookup table for different UKCP18 collections â€” ukcp18lookup","text":"Dataframe object 28 rows, 6 columns","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18lookup.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A model member lookup table for different UKCP18 collections â€” ukcp18lookup","text":"https://www.metoffice.gov.uk/binaries/content/assets/metofficegovuk/pdf/research/ukcp/ukcp18_guidance_data_availability.pdf","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18rcm.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of 12km resolution UKCP18 regional climate data â€” ukcp18rcm","title":"A list of 12km resolution UKCP18 regional climate data â€” ukcp18rcm","text":"list hourly UKCP18 regional climata data May 2018 Southwest UK returned ukcp18toclimarray() collection='land-gcm' & domain='uk'","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18rcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of 12km resolution UKCP18 regional climate data â€” ukcp18rcm","text":"","code":"ukcp18rcm"},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18rcm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of 12km resolution UKCP18 regional climate data â€” ukcp18rcm","text":"list following elements: tme POSIXlt object dates times climarray list arrays climate variables following variables: windheight_m numeric value metres wind height ground tempheight_m numeric value metres temperature height ground dtmc wrapped SpatRast object elevations (m) matching extent resolution climate data","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18rcm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list of 12km resolution UKCP18 regional climate data â€” ukcp18rcm","text":"ftp.ceda.ac.uk","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18sst.html","id":null,"dir":"Reference","previous_headings":"","what":"A ~0.1 degree grid resolution dataset of UKCP18 sea-surface temperature data for NW Europe â€” ukcp18sst","title":"A ~0.1 degree grid resolution dataset of UKCP18 sea-surface temperature data for NW Europe â€” ukcp18sst","text":"spatial dataset monthly sea-surface temperatures April June 2018 sea around UK & North West Europe, covering area bounded  -19.9, 13.1, 40.0, 65.0 (xmin, xmax, ymin, ymax) WGS84 lat long coordinate reference system (EPSG:4326)","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18sst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A ~0.1 degree grid resolution dataset of UKCP18 sea-surface temperature data for NW Europe â€” ukcp18sst","text":"","code":"ukcp18sst"},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18sst.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A ~0.1 degree grid resolution dataset of UKCP18 sea-surface temperature data for NW Europe â€” ukcp18sst","text":"PackedSpatRaster object 375 rows, 297 columns 3 layers","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18sst.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A ~0.1 degree grid resolution dataset of UKCP18 sea-surface temperature data for NW Europe â€” ukcp18sst","text":"ftp.ceda.ac.uk","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18toclimarray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert UKCP18  ncdf4 files to format required for model â€” ukcp18toclimarray","text":"","code":"ukcp18toclimarray(   dir_ukcp,   dtm,   startdate,   enddate,   collection = c(\"land-gcm\", \"land-rcm\"),   domain = c(\"uk\", \"eur\", \"global\"),   member = c(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",     \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\",     \"27\", \"28\"),   wsalbedo = 0.19,   bsalbedo = 0.22,   ukcp_vars = c(\"clt\", \"hurs\", \"huss\", \"pr\", \"psl\", \"rls\", \"rss\", \"tasmax\", \"tasmin\",     \"uas\", \"vas\"),   ukcp_units = c(\"%\", \"%\", \"1\", \"mm/day\", \"hPa\", \"watt/m^2\", \"watt/m^2\", \"degC\",     \"degC\", \"m/s\", \"m/s\"),   output_units = c(\"%\", \"%\", \"1\", \"mm/day\", \"kPa\", \"watt/m^2\", \"watt/m^2\", \"degC\",     \"degC\", \"m/s\", \"m/s\"),   toArrays = TRUE,   sampleplot = FALSE )"},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18toclimarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert UKCP18  ncdf4 files to format required for model â€” ukcp18toclimarray","text":"dir_ukcp directory holding ncdf files UKCP18 data required extract requested variables timeseries. dtm SpatRaster object elevations covering geographical extent required (see details) startdate POSIXlt class defining start date required timeseries enddate POSIXlt class defining end date required timeseries collection text string defining UKCP18 collection, either 'land-gcm' 'land-rcm' domain text string defining UKCP18 domain, either 'uk' 'eur'(land-rcm collection ) 'global' member string defining climate model member used timeseries. Available members vary UKCP18 collections. ukcp_vars UKCP18 variable names extracted CHANGE ukcp_units units UKCP18 variables extracted CHANGE output_units units required output CHANGE CHECK CORRECT toArrays logical determining climate data returned list arrays. FALSE returns list Spatrasts. sampleplot TRUE plots examples interpolated dates converting 360 366 day years","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/ukcp18toclimarray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert UKCP18  ncdf4 files to format required for model â€” ukcp18toclimarray","text":"list following: tme POSIXlt object times corresponding climate observations climarray either list arrays list SpatRasts daily weather variables dtmca coarse resolution digital elevation dataset matching resolution crs input climate data, extent matching dtm Converts UKCP18 global regional land data form netCDF4 file (returned ukcp18_downscale() correct data form required subsequent modelling. function converts 360 day UKCP18 actual calendar data reassignment linear interpolation missing data. Returned climate data resolution, corrdinate reference system UKCP18 data requested, can vary domains collections. extent provided dtm , necessary, re-projected resampled CRS resolution UKCP18 data requested. regional UKCP18 data, recommended 'dtm' derived original orography data available download. dir_out <- tempdir() download_ukcp18(dir_out,'ceda_username','ceda_password',.POSIXlt('2018-05-01'),.POSIXlt('2018-05-31'),'land-rcm','uk','rcp85',c('01','02','03'),c('clt','hurs','huss','pr','psl','rls','rss','tas','tasmax','tasmin','uas','vas')) climdata<-ukcp18toclimarray()","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/winddownscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","title":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","text":"function winddownscale used spatially downscale windspeed, performing adjustments elevation terrain sheltering specified wind direction.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/winddownscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","text":"","code":"winddownscale(wspeed, wdir, dtmf, dtmm, dtmc, uz = 2)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/winddownscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","text":"wspeed coarse-resolution array wind speeds (m/s) wdir coarse-resolution array wind directions (decimal degrees north, ) dtmf high-resolution SpatRast elevations dtmm medium-resolution SpatRast elevations covering larger area dtmf (see details) dtmc coarse-resolution SpatRast elevations matching resolution, extent coordinate reference system wspeed. uz height ground (m) wind speed measurement wspeed.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/winddownscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","text":"stacked SpatRast wind speeds matching resolution, coordinate reference system extent dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/winddownscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","text":"Elevation effects derived sampling dtms intervals upwind direction, determining elevation difference form focal cell performing standard wind-height adjustment. Terrain sheltering computed horizon angles following method detailed Maclean et al (2019) Methods Ecol Evol 10: 280-290. supplying three dtms, algorithm able account elevation differences outside boundaries dtmf. area covered dtmm extend least one dtmc grid cell beyond dtmf. Elevations must metres. coordinate reference system dtmf must x y also metres. dtmm dtmc reprojected match coordinate reference system dtmf. enhance computational efficiency, Wind direction assumed constant extent dtmf.","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/winddownscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downscale wind speed accounting for elevation and terrain sheltering effects â€” winddownscale","text":"","code":"wspeed <- era5data$climarray$windspeed wdir <- era5data$climarray$winddir # Takes a few seconds to run wsfine <- winddownscale(wspeed, wdir, rast(dtmf), rast(dtmm), rast(era5data$dtmc)) plot(wsfine[[1]])"},{"path":"https://jrmosedale.github.io/mesoclim/reference/windelev.html","id":null,"dir":"Reference","previous_headings":"","what":"derive wind terrain adjustment coefficient â€” windelev","title":"derive wind terrain adjustment coefficient â€” windelev","text":"function windelev used spatially downscale wind, adjusts wind speed elevation applies terrain shelter coefficient specified wind direction.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/windelev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"derive wind terrain adjustment coefficient â€” windelev","text":"","code":"windelev(dtmf, dtmm, dtmc, wdir, uz = 2)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/windelev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"derive wind terrain adjustment coefficient â€” windelev","text":"dtmf high-resolution SpatRast elevations dtmm medium-resolution SpatRast elevations covering larger area dtmf (see details) dtmc coarse-resolution SpatRast elevations usually matching resolution climate data used downscaling (see details) wdir wind direction (, decimal degrees). uz height ground (m) wind speed measurement","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/windelev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"derive wind terrain adjustment coefficient â€” windelev","text":"SpatRast wind adjustment coefficients matching resoltuion, coordinate reference system extent dtmf.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/windelev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"derive wind terrain adjustment coefficient â€” windelev","text":"Elevation effects derived sampling dtms intervals upwind direction, determining elevation difference form focal cell performing standard wind-height adjustment. Terrain sheltering computed horizon angles following method detailed Maclean et al (2019) Methods Ecol Evol 10: 280-290. supplying three dtms, algorithm able account elevation differences outside boundaries dtmf. area covered dtmm extend least one dtmc grid cell beyond dtmf. Elevations must metres. coordinate reference system dtmf must x y also metres. dtmm dtmc reprojected match coordinate reference system dtmf.","code":""},{"path":[]},{"path":"https://jrmosedale.github.io/mesoclim/reference/windelev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"derive wind terrain adjustment coefficient â€” windelev","text":"","code":"wc <- windelev(rast(dtmf), rast(dtmm), rast(era5data$dtmc), wdir = 0) plot(wc)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/write_climdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write climate data â€” write_climdata","title":"Write climate data â€” write_climdata","text":"Writes binary file climate dataset (output example ukcp18toclimdata(). Wraps Spatrasters PackedSpatRasters writing.","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/write_climdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write climate data â€” write_climdata","text":"","code":"write_climdata(climdata, filepath, overwrite = FALSE)"},{"path":"https://jrmosedale.github.io/mesoclim/reference/write_climdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write climate data â€” write_climdata","text":"climdata list climate variables output ukcp18toclimdata() filepath written","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/write_climdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write climate data â€” write_climdata","text":"writes external file","code":""},{"path":"https://jrmosedale.github.io/mesoclim/reference/write_climdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write climate data â€” write_climdata","text":"","code":"write_climdata(ukcp18rcm,file.path(temp_dir(),'filename.rda')) #> Error in temp_dir(): could not find function \"temp_dir\""}]
